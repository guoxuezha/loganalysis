{"date":"2023-06-15","results":[{"creation_time":"2023-06-15T04:10:56Z","severity":"10.0","host_ip":"172.16.208.31","resultId":"48ff735e-1116-4473-b292-aa719d12da3f","gvm_asset_id":"","original_severity":"10","qod":{"type":"","value":"80"},"description":"The \"Windows 7\" Operating System on the remote host has reached the end of life. CPE: cpe:/o:microsoft:windows_7:-:sp1 Installed version, build or SP: sp1 EOL date: 2020-01-14 EOL info: https://learn.microsoft.com/en-us/lifecycle/products/windows-7","scan_nvt_version":"2022-04-05T13:00:52Z","nvt":{"name":"Operating System (OS) End of Life (EOL) Detection","oid":"1.3.6.1.4.1.25623.1.0.103674","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:C/I:C/A:C|summary=The Operating System (OS) on the remote host has reached the End of Life (EOL) and should not be used anymore.|insight=|affected=|impact=An EOL version of an OS is not receiving any security updates from the vendor. Unfixed security vulnerabilities might be leveraged by an attacker to compromise the security of this host.|solution=Upgrade the OS on the remote host to a version which is still supported and receiving security updates by the vendor.|vuldetect=Checks if an EOL version of an OS is present on the target host.|solution_type=Mitigation"},"original_threat":"High","hostname":"WIN7-2023BHZNCR","port":"general/tcp","name":"Operating System (OS) End of Life (EOL) Detection","comment":"","threat":"High","modification_time":"2023-06-15T04:10:56Z"},{"creation_time":"2023-06-15T06:20:10Z","severity":"6.4","host_ip":"172.16.200.75","resultId":"8b76797f-77d2-4074-bef5-b154991ed6c1","gvm_asset_id":"","original_severity":"6.4","qod":{"type":"","value":"80"},"description":"The cookies: Set-Cookie: csrftoken=Hx5eQUcnWEWIhqMDivvXLruKWosxVjUwNhp0HesigNeKim9A2E4HgEYYvPE2PGVz; expires=Thu, 13-Jun-2024 06:10:56 GMT; Max-Age=***replaced***; Path=/ are missing the \"Secure\" cookie attribute.","scan_nvt_version":"2023-01-17T10:10:58Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Missing 'Secure' Cookie Attribute (HTTP)","oid":"1.3.6.1.4.1.25623.1.0.902661","type":"nvt","family":"Web application abuses","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:P/I:P/A:N|summary=The remote HTTP web server / application is missing to set the 'Secure' cookie attribute for one or more sent HTTP cookie.|insight=The flaw exists if a cookie is not using the 'Secure' cookie attribute and is sent over a SSL/TLS connection. This allows a cookie to be passed to the server by the client over non-secure channels (HTTP) and subsequently allows an attacker to e.g. conduct session hijacking attacks.|affected=Any web application accessible via a SSL/TLS connection (HTTPS) and at the same time also accessible over a cleartext connection (HTTP).|impact=|solution=Set the 'Secure' cookie attribute for any cookies that are sent over a SSL/TLS connection.|vuldetect=Checks all cookies sent by the remote HTTP web server / application over a SSL/TLS connection for a missing 'Secure' cookie attribute.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"443/tcp","name":"Missing 'Secure' Cookie Attribute (HTTP)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:20:10Z"},{"creation_time":"2023-06-15T06:17:32Z","severity":"6.4","host_ip":"172.16.200.77","resultId":"32e07b24-6d91-4edf-8c98-6661db07473a","gvm_asset_id":"","original_severity":"6.4","qod":{"type":"","value":"80"},"description":"The cookies: Set-Cookie: PHPSESSID=***replaced***; path=/ are missing the \"Secure\" cookie attribute.","scan_nvt_version":"2023-01-17T10:10:58Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Missing 'Secure' Cookie Attribute (HTTP)","oid":"1.3.6.1.4.1.25623.1.0.902661","type":"nvt","family":"Web application abuses","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:P/I:P/A:N|summary=The remote HTTP web server / application is missing to set the 'Secure' cookie attribute for one or more sent HTTP cookie.|insight=The flaw exists if a cookie is not using the 'Secure' cookie attribute and is sent over a SSL/TLS connection. This allows a cookie to be passed to the server by the client over non-secure channels (HTTP) and subsequently allows an attacker to e.g. conduct session hijacking attacks.|affected=Any web application accessible via a SSL/TLS connection (HTTPS) and at the same time also accessible over a cleartext connection (HTTP).|impact=|solution=Set the 'Secure' cookie attribute for any cookies that are sent over a SSL/TLS connection.|vuldetect=Checks all cookies sent by the remote HTTP web server / application over a SSL/TLS connection for a missing 'Secure' cookie attribute.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"Missing 'Secure' Cookie Attribute (HTTP)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:17:32Z"},{"creation_time":"2023-06-15T06:16:11Z","severity":"6.4","host_ip":"172.16.200.78","resultId":"5b6db2c8-fa0c-4263-a7c9-7302fd25833c","gvm_asset_id":"","original_severity":"6.4","qod":{"type":"","value":"80"},"description":"The cookies: Set-Cookie: PHPSESSID=***replaced***; path=/ are missing the \"Secure\" cookie attribute.","scan_nvt_version":"2023-01-17T10:10:58Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Missing 'Secure' Cookie Attribute (HTTP)","oid":"1.3.6.1.4.1.25623.1.0.902661","type":"nvt","family":"Web application abuses","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:P/I:P/A:N|summary=The remote HTTP web server / application is missing to set the 'Secure' cookie attribute for one or more sent HTTP cookie.|insight=The flaw exists if a cookie is not using the 'Secure' cookie attribute and is sent over a SSL/TLS connection. This allows a cookie to be passed to the server by the client over non-secure channels (HTTP) and subsequently allows an attacker to e.g. conduct session hijacking attacks.|affected=Any web application accessible via a SSL/TLS connection (HTTPS) and at the same time also accessible over a cleartext connection (HTTP).|impact=|solution=Set the 'Secure' cookie attribute for any cookies that are sent over a SSL/TLS connection.|vuldetect=Checks all cookies sent by the remote HTTP web server / application over a SSL/TLS connection for a missing 'Secure' cookie attribute.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"Missing 'Secure' Cookie Attribute (HTTP)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:16:11Z"},{"creation_time":"2023-06-15T06:17:27Z","severity":"5.8","host_ip":"172.16.200.78","resultId":"d8f1d90c-bf6e-489b-9d4d-a044b191ff76","gvm_asset_id":"","original_severity":"5.8","qod":{"type":"","value":"99"},"description":"The web server has the following HTTP methods enabled: TRACE","scan_nvt_version":"2022-05-12T09:32:01Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","oid":"1.3.6.1.4.1.25623.1.0.11213","type":"nvt","family":"Web Servers","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:P/A:N|summary=The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods which are used to debug web server connections.|insight=It has been shown that web servers supporting this methods are subject to cross-site-scripting attacks, dubbed XST for Cross-Site-Tracing, when used in conjunction with various weaknesses in browsers.|affected=Web servers with enabled TRACE and/or TRACK methods.|impact=An attacker may use this flaw to trick your legitimate web users to give him their credentials.|solution=Disable the TRACE and TRACK methods in your web server configuration. Please see the manual of your web server or the references for more information.|vuldetect=Checks if HTTP methods such as TRACE and TRACK are enabled and can be used.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"443/tcp","name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","comment":"","threat":"Medium","modification_time":"2023-06-15T06:17:27Z"},{"creation_time":"2023-06-15T06:18:38Z","severity":"5.8","host_ip":"172.16.200.77","resultId":"917be4f1-8d07-465d-a518-4134a1ec433a","gvm_asset_id":"","original_severity":"5.8","qod":{"type":"","value":"99"},"description":"The web server has the following HTTP methods enabled: TRACE","scan_nvt_version":"2022-05-12T09:32:01Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","oid":"1.3.6.1.4.1.25623.1.0.11213","type":"nvt","family":"Web Servers","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:P/A:N|summary=The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods which are used to debug web server connections.|insight=It has been shown that web servers supporting this methods are subject to cross-site-scripting attacks, dubbed XST for Cross-Site-Tracing, when used in conjunction with various weaknesses in browsers.|affected=Web servers with enabled TRACE and/or TRACK methods.|impact=An attacker may use this flaw to trick your legitimate web users to give him their credentials.|solution=Disable the TRACE and TRACK methods in your web server configuration. Please see the manual of your web server or the references for more information.|vuldetect=Checks if HTTP methods such as TRACE and TRACK are enabled and can be used.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"443/tcp","name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:38Z"},{"creation_time":"2023-06-15T06:18:38Z","severity":"5.8","host_ip":"172.16.200.77","resultId":"765bd172-fc2d-44ae-90e5-df7c604c1e64","gvm_asset_id":"","original_severity":"5.8","qod":{"type":"","value":"99"},"description":"The web server has the following HTTP methods enabled: TRACE","scan_nvt_version":"2022-05-12T09:32:01Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","oid":"1.3.6.1.4.1.25623.1.0.11213","type":"nvt","family":"Web Servers","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:P/A:N|summary=The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods which are used to debug web server connections.|insight=It has been shown that web servers supporting this methods are subject to cross-site-scripting attacks, dubbed XST for Cross-Site-Tracing, when used in conjunction with various weaknesses in browsers.|affected=Web servers with enabled TRACE and/or TRACK methods.|impact=An attacker may use this flaw to trick your legitimate web users to give him their credentials.|solution=Disable the TRACE and TRACK methods in your web server configuration. Please see the manual of your web server or the references for more information.|vuldetect=Checks if HTTP methods such as TRACE and TRACK are enabled and can be used.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:38Z"},{"creation_time":"2023-06-15T06:17:27Z","severity":"5.8","host_ip":"172.16.200.78","resultId":"ccd3e61c-1c49-4837-ac4a-54fd4bcb768b","gvm_asset_id":"","original_severity":"5.8","qod":{"type":"","value":"99"},"description":"The web server has the following HTTP methods enabled: TRACE","scan_nvt_version":"2022-05-12T09:32:01Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","oid":"1.3.6.1.4.1.25623.1.0.11213","type":"nvt","family":"Web Servers","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:P/A:N|summary=The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods which are used to debug web server connections.|insight=It has been shown that web servers supporting this methods are subject to cross-site-scripting attacks, dubbed XST for Cross-Site-Tracing, when used in conjunction with various weaknesses in browsers.|affected=Web servers with enabled TRACE and/or TRACK methods.|impact=An attacker may use this flaw to trick your legitimate web users to give him their credentials.|solution=Disable the TRACE and TRACK methods in your web server configuration. Please see the manual of your web server or the references for more information.|vuldetect=Checks if HTTP methods such as TRACE and TRACK are enabled and can be used.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","comment":"","threat":"Medium","modification_time":"2023-06-15T06:17:27Z"},{"creation_time":"2023-06-15T06:17:27Z","severity":"5.8","host_ip":"172.16.200.78","resultId":"8b8ec030-24a3-48cf-afda-78eaa9913d97","gvm_asset_id":"","original_severity":"5.8","qod":{"type":"","value":"99"},"description":"The web server has the following HTTP methods enabled: TRACE","scan_nvt_version":"2022-05-12T09:32:01Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","oid":"1.3.6.1.4.1.25623.1.0.11213","type":"nvt","family":"Web Servers","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:P/A:N|summary=The remote web server supports the TRACE and/or TRACK methods. TRACE and TRACK are HTTP methods which are used to debug web server connections.|insight=It has been shown that web servers supporting this methods are subject to cross-site-scripting attacks, dubbed XST for Cross-Site-Tracing, when used in conjunction with various weaknesses in browsers.|affected=Web servers with enabled TRACE and/or TRACK methods.|impact=An attacker may use this flaw to trick your legitimate web users to give him their credentials.|solution=Disable the TRACE and TRACK methods in your web server configuration. Please see the manual of your web server or the references for more information.|vuldetect=Checks if HTTP methods such as TRACE and TRACK are enabled and can be used.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"HTTP Debugging Methods (TRACE/TRACK) Enabled","comment":"","threat":"Medium","modification_time":"2023-06-15T06:17:27Z"},{"creation_time":"2023-06-15T04:11:37Z","severity":"5.3","host_ip":"172.16.200.55","resultId":"6572c06e-e64f-4ee2-8fca-9e0c87f2ac41","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak host key algorithm(s): host key algorithm | Description ----------------------------------------------------------------------------------------- ssh-dss | Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"name":"Weak Host Key Algorithm(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.117687","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak host key algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak host key algorithm(s).|vuldetect=Checks the supported host key algorithms of the remote SSH server. Currently weak host key algorithms are defined as the following: - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Host Key Algorithm(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:11:37Z"},{"creation_time":"2023-06-15T04:11:37Z","severity":"5.3","host_ip":"172.16.200.55","resultId":"d06ef3db-b4d4-4b8a-948b-43f77feba7fd","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:11:37Z"},{"creation_time":"2023-06-15T06:19:09Z","severity":"5.3","host_ip":"172.16.200.57","resultId":"d64f589e-8084-4136-af46-c57a311e9891","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:19:09Z"},{"creation_time":"2023-06-15T06:19:09Z","severity":"5.3","host_ip":"172.16.200.57","resultId":"e7df4b36-b357-4232-a7dc-3fbefcc58a1a","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:19:09Z"},{"creation_time":"2023-06-15T06:19:09Z","severity":"5.3","host_ip":"172.16.200.57","resultId":"2c747d65-d504-4bfd-bcc1-4223f29392e6","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak host key algorithm(s): host key algorithm | Description ----------------------------------------------------------------------------------------- ssh-dss | Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"name":"Weak Host Key Algorithm(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.117687","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak host key algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak host key algorithm(s).|vuldetect=Checks the supported host key algorithms of the remote SSH server. Currently weak host key algorithms are defined as the following: - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Host Key Algorithm(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:19:09Z"},{"creation_time":"2023-06-15T06:18:48Z","severity":"5.3","host_ip":"172.16.200.56","resultId":"b4d74827-2776-49bb-82b7-d0c0f7cbfe98","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:48Z"},{"creation_time":"2023-06-15T06:18:48Z","severity":"5.3","host_ip":"172.16.200.56","resultId":"b969270e-33f9-49bb-bb02-88479e2ebff3","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:48Z"},{"creation_time":"2023-06-15T06:18:43Z","severity":"5.3","host_ip":"172.16.200.55","resultId":"4051c643-e2eb-4a1d-99cd-df0aba597f55","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:43Z"},{"creation_time":"2023-06-15T04:22:50Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"60a8d8f4-c473-4a0f-a41c-9fc64c5d46d1","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:22:50Z"},{"creation_time":"2023-06-15T04:22:50Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"4ffc5877-c1f5-4ee7-910b-1ea37e7ee4eb","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:22:50Z"},{"creation_time":"2023-06-15T04:22:50Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"4a79cb11-6090-4304-aa3c-d193fced16b6","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak host key algorithm(s): host key algorithm | Description ----------------------------------------------------------------------------------------- ssh-dss | Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"name":"Weak Host Key Algorithm(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.117687","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak host key algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak host key algorithm(s).|vuldetect=Checks the supported host key algorithms of the remote SSH server. Currently weak host key algorithms are defined as the following: - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Host Key Algorithm(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:22:50Z"},{"creation_time":"2023-06-15T11:55:08Z","severity":"5.3","host_ip":"172.16.200.60","resultId":"60a78a2f-27d7-4ffd-aaac-f02318660273","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T11:55:08Z"},{"creation_time":"2023-06-15T11:55:08Z","severity":"5.3","host_ip":"172.16.200.60","resultId":"614fe785-c4ed-45ed-84b6-f742da134a57","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak host key algorithm(s): host key algorithm | Description ----------------------------------------------------------------------------------------- ssh-dss | Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"name":"Weak Host Key Algorithm(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.117687","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak host key algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak host key algorithm(s).|vuldetect=Checks the supported host key algorithms of the remote SSH server. Currently weak host key algorithms are defined as the following: - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Host Key Algorithm(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T11:55:08Z"},{"creation_time":"2023-06-15T06:43:47Z","severity":"5.3","host_ip":"192.168.5.175","resultId":"37939d47-1a2f-4b6e-9a0d-f8a7d23c9eca","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:43:47Z"},{"creation_time":"2023-06-15T06:25:18Z","severity":"5.3","host_ip":"172.16.200.76","resultId":"05eef6b3-e615-4864-bbc1-0bdf82fb651e","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSL/TLS server is using the following certificate(s) with a RSA key with less than 2048 bits (public-key-size:public-key-algorithm:serial:issuer): 1024:RSA:0097C86C42:CN=NSFOCUSCA,C=CA (Certificate in chain)","scan_nvt_version":"2021-12-10T12:48:00Z","nvt":{"refs":[{"type":"url"}],"name":"SSL/TLS: Server Certificate / Certificate in Chain with RSA keys less than 2048 bits","oid":"1.3.6.1.4.1.25623.1.0.150710","type":"nvt","family":"SSL and TLS","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSL/TLS server certificate and/or any of the certificates in the certificate chain is using a RSA key with less than 2048 bits.|insight=SSL/TLS certificates using RSA keys with less than 2048 bits are considered unsafe.|affected=|impact=Using certificates with weak RSA key size can lead to unauthorized exposure of sensitive information.|solution=Replace the certificate with a stronger key and reissue the certificates it signed.|vuldetect=Checks the RSA keys size of the server certificate and all certificates in chain for a size < 2048 bit.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"5003/tcp","name":"SSL/TLS: Server Certificate / Certificate in Chain with RSA keys less than 2048 bits","comment":"","threat":"Medium","modification_time":"2023-06-15T06:25:18Z"},{"creation_time":"2023-06-15T04:14:36Z","severity":"5.3","host_ip":"172.16.200.56","resultId":"f572fb86-24d0-4635-88be-3a74fe87f2bc","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:14:36Z"},{"creation_time":"2023-06-15T04:11:37Z","severity":"5.3","host_ip":"172.16.200.55","resultId":"9fd97d1a-26c6-4a73-ac39-13f84fa3d32d","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:11:37Z"},{"creation_time":"2023-06-15T06:18:43Z","severity":"5.3","host_ip":"172.16.200.55","resultId":"b5b5fc4b-ceb9-42fd-b6a6-b2b7665fe392","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:43Z"},{"creation_time":"2023-06-15T04:14:36Z","severity":"5.3","host_ip":"172.16.200.56","resultId":"d48ae985-e245-4a76-996f-bec27658ff4b","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:14:36Z"},{"creation_time":"2023-06-15T06:18:43Z","severity":"5.3","host_ip":"172.16.200.55","resultId":"0b60c0b5-1dee-4d71-a637-11ec7e44a38a","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak host key algorithm(s): host key algorithm | Description ----------------------------------------------------------------------------------------- ssh-dss | Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"name":"Weak Host Key Algorithm(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.117687","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak host key algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak host key algorithm(s).|vuldetect=Checks the supported host key algorithms of the remote SSH server. Currently weak host key algorithms are defined as the following: - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Host Key Algorithm(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:43Z"},{"creation_time":"2023-06-15T06:41:36Z","severity":"5.3","host_ip":"192.168.5.174","resultId":"096f65e3-0a3d-483c-892a-855efa8fe064","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:41:36Z"},{"creation_time":"2023-06-15T06:07:15Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"66b6cb51-ae58-4cfb-88e8-ae8cbdb18399","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak host key algorithm(s): host key algorithm | Description ----------------------------------------------------------------------------------------- ssh-dss | Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"name":"Weak Host Key Algorithm(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.117687","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak host key algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak host key algorithm(s).|vuldetect=Checks the supported host key algorithms of the remote SSH server. Currently weak host key algorithms are defined as the following: - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Host Key Algorithm(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:07:15Z"},{"creation_time":"2023-06-15T06:07:15Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"ffffe1e3-6420-4ec0-906c-b0efcab56155","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:07:15Z"},{"creation_time":"2023-06-15T06:07:15Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"62f044b1-345e-487c-9207-2f6abd947b3e","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:07:15Z"},{"creation_time":"2023-06-15T04:16:56Z","severity":"5.3","host_ip":"172.16.200.57","resultId":"bbf41a7e-62d7-4e5c-8282-e3bc97128fb7","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak host key algorithm(s): host key algorithm | Description ----------------------------------------------------------------------------------------- ssh-dss | Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"name":"Weak Host Key Algorithm(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.117687","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak host key algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak host key algorithm(s).|vuldetect=Checks the supported host key algorithms of the remote SSH server. Currently weak host key algorithms are defined as the following: - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Host Key Algorithm(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:16:56Z"},{"creation_time":"2023-06-15T04:16:56Z","severity":"5.3","host_ip":"172.16.200.57","resultId":"5306b5fb-866d-4206-937d-4d5c73a48ecf","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:16:56Z"},{"creation_time":"2023-06-15T06:18:28Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"ceba6dae-f3b1-411c-8ed0-2e2e2f4fb3e4","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:28Z"},{"creation_time":"2023-06-15T04:16:56Z","severity":"5.3","host_ip":"172.16.200.57","resultId":"31d4d476-f0bd-42ae-acfd-b7fdd9e10ae4","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server uses a public RSA key with the following weak (too small) size: 1024","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"refs":[{"type":"url"}],"name":"Weak (Small) Public Key Size(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150712","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server uses a weak (too small) public key size.|insight=- <= 1024 bit for RSA based keys: Best practices require that RSA digital signatures be 2048 or more bits long to provide adequate security. Key lengths of 1024 are considered deprecated since 2011.|affected=|impact=A man-in-the-middle attacker can exploit this vulnerability to record the communication to decrypt the session key and even the messages.|solution=- <= 1024 bit for RSA based keys: Install a RSA public key length of 2048 bits or greater, or to switch to more secure key types.|vuldetect=Checks the public key size of the remote SSH server. Currently weak (too small) key sizes are defined as the following: - <= 1024 bit for RSA based keys|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak (Small) Public Key Size(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:16:56Z"},{"creation_time":"2023-06-15T06:18:28Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"35456051-e98a-4f40-b7c6-5e27249e1835","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak host key algorithm(s): host key algorithm | Description ----------------------------------------------------------------------------------------- ssh-dss | Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)","scan_nvt_version":"2021-11-24T06:31:19Z","nvt":{"name":"Weak Host Key Algorithm(s) (SSH)","oid":"1.3.6.1.4.1.25623.1.0.117687","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak host key algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak host key algorithm(s).|vuldetect=Checks the supported host key algorithms of the remote SSH server. Currently weak host key algorithms are defined as the following: - ssh-dss: Digital Signature Algorithm (DSA) / Digital Signature Standard (DSS)|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Host Key Algorithm(s) (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:28Z"},{"creation_time":"2023-06-15T06:18:28Z","severity":"5.3","host_ip":"172.16.200.54","resultId":"ebff23f1-2e8a-405c-be4b-345106ee566d","gvm_asset_id":"","original_severity":"5.3","qod":{"type":"","value":"80"},"description":"The remote SSH server supports the following weak KEX algorithm(s): KEX algorithm | Reason ------------------------------------------------------------------------------------------- diffie-hellman-group-exchange-sha1 | Using SHA-1 diffie-hellman-group1-sha1 | Using Oakley Group 2 (a 1024-bit MODP group) and SHA-1","scan_nvt_version":"2022-12-08T10:12:32Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.150713","type":"nvt","family":"General","severities":[{"origin":"Greenbone","type":"cvss_base_v3"}],"tags":"cvss_base_vector=CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N|summary=The remote SSH server is configured to allow / support weak key exchange (KEX) algorithm(s).|insight=- 1024-bit MODP group / prime KEX algorithms: Millions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key exchange. Practitioners believed this was safe as long as new key exchange messages were generated for every connection. However, the first step in the number field sieve-the most efficient algorithm for breaking a Diffie-Hellman connection-is dependent only on this prime. A nation-state can break a 1024-bit prime.|affected=|impact=An attacker can quickly break individual connections.|solution=Disable the reported weak KEX algorithm(s) - 1024-bit MODP group / prime KEX algorithms: Alternatively use elliptic-curve Diffie-Hellmann in general, e.g. Curve 25519.|vuldetect=Checks the supported KEX algorithms of the remote SSH server. Currently weak KEX algorithms are defined as the following: - non-elliptic-curve Diffie-Hellmann (DH) KEX algorithms with 1024-bit MODP group / prime - ephemerally generated key exchange groups uses SHA-1 - using RSA 1024-bit modulus key|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Key Exchange (KEX) Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:28Z"},{"creation_time":"2023-06-15T04:43:47Z","severity":"5.0","host_ip":"172.16.201.23","resultId":"d021401a-c353-46f6-9ae4-ee8e47c477da","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:43:47Z"},{"creation_time":"2023-06-15T04:59:18Z","severity":"5.0","host_ip":"172.16.201.15","resultId":"be949141-7f0c-429e-8597-19669730b3e6","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:59:18Z"},{"creation_time":"2023-06-15T04:58:28Z","severity":"5.0","host_ip":"172.16.201.14","resultId":"e3c5f5a3-389f-4ce6-b63e-ab3358b5c9ce","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:58:28Z"},{"creation_time":"2023-06-15T04:12:19Z","severity":"5.0","host_ip":"172.16.201.6","resultId":"4b91455d-14f0-4f37-b98f-bb7f22cb4064","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:12:19Z"},{"creation_time":"2023-06-15T12:00:30Z","severity":"5.0","host_ip":"172.16.201.12","resultId":"ddc54df1-cf62-4cc1-ad7a-495203a5c28b","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T12:00:30Z"},{"creation_time":"2023-06-15T06:16:11Z","severity":"5.0","host_ip":"172.16.200.78","resultId":"a177d87e-c19a-403e-90a9-e0a84819262d","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"80"},"description":"The cookies: Set-Cookie: PHPSESSID=***replaced***; path=/ are missing the \"HttpOnly\" attribute.","scan_nvt_version":"2023-01-11T10:12:37Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Missing 'HttpOnly' Cookie Attribute (HTTP)","oid":"1.3.6.1.4.1.25623.1.0.105925","type":"nvt","family":"Web application abuses","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:P/I:N/A:N|summary=The remote HTTP web server / application is missing to set the 'HttpOnly' cookie attribute for one or more sent HTTP cookie.|insight=The flaw exists if a session cookie is not using the 'HttpOnly' cookie attribute. This allows a cookie to be accessed by JavaScript which could lead to session hijacking attacks.|affected=Any web application with session handling in cookies.|impact=|solution=Set the 'HttpOnly' attribute for any session cookie.|vuldetect=Checks all cookies sent by the remote HTTP web server / application for a missing 'HttpOnly' cookie attribute.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"Missing 'HttpOnly' Cookie Attribute (HTTP)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:16:11Z"},{"creation_time":"2023-06-15T04:10:36Z","severity":"5.0","host_ip":"172.16.201.7","resultId":"f373a7b9-9457-4b35-b82a-acb7823d339a","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:10:36Z"},{"creation_time":"2023-06-15T04:11:46Z","severity":"5.0","host_ip":"172.16.201.26","resultId":"4ba5473f-d968-4423-a10d-e5ea9a0f2fb8","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:11:46Z"},{"creation_time":"2023-06-15T04:45:22Z","severity":"5.0","host_ip":"172.16.201.9","resultId":"0fa28513-2f2b-4661-adb9-9ea9f6e1bfe5","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:45:22Z"},{"creation_time":"2023-06-15T04:44:22Z","severity":"5.0","host_ip":"172.16.201.20","resultId":"b8fa2b44-4e5e-4d38-b35d-50a9e3ee5eb7","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:44:22Z"},{"creation_time":"2023-06-15T04:57:28Z","severity":"5.0","host_ip":"172.16.201.26","resultId":"9bc0aa37-6136-43e6-bd02-b21fb89759f3","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:57:28Z"},{"creation_time":"2023-06-15T04:14:24Z","severity":"5.0","host_ip":"172.16.201.9","resultId":"b35b258e-bf4b-4d38-bae3-2ef4dde82f33","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:14:24Z"},{"creation_time":"2023-06-15T04:07:58Z","severity":"5.0","host_ip":"172.16.201.201","resultId":"7e5bf0ef-efbd-42f1-9731-999b7345c7d4","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"Received (an) answer(s) for a non-recursive query for \"example.com\". Result: 93.184.216.34","scan_nvt_version":"2023-03-24T10:19:42Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"}],"name":"DNS Cache Snooping Vulnerability (UDP) - Active Check","oid":"1.3.6.1.4.1.25623.1.0.146591","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:P/I:N/A:N|summary=The DNS server is prone to a cache snooping vulnerability.|insight=DNS cache snooping is when someone queries a DNS server in order to find out (snoop) if the DNS server has a specific DNS record cached, and thereby deduce if the DNS server's owner (or its users) have recently visited a specific site. This may reveal information about the DNS server's owner, such as what vendor, bank, service provider, etc. they use. Especially if this is confirmed (snooped) multiple times over a period. This method could even be used to gather statistical information - for example at what time does the DNS server's owner typically access his net bank etc. The cached DNS record's remaining TTL value can provide very accurate data for this. DNS cache snooping is possible even if the DNS server is not configured to resolve recursively for 3rd parties, as long as it provides records from the cache also to 3rd parties (a.k.a. 'lame requests').|affected=|impact=Attackers might gain information about cached DNS records which might lead to further attacks. Note: This finding might be an acceptable risk if you: - trust all clients which can reach the server - do not allow recursive queries from outside your trusted client network.|solution=There are multiple possible mitigation steps depending on location and functionality needed by the DNS server: - Disable recursion - Don't allow public access to DNS Servers doing recursion - Leave recursion enabled if the DNS Server stays on a corporate network that cannot be reached by untrusted clients|vuldetect=Sends a crafted DNS query and checks the response.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"53/udp","name":"DNS Cache Snooping Vulnerability (UDP) - Active Check","comment":"","threat":"Medium","modification_time":"2023-06-15T04:07:58Z"},{"creation_time":"2023-06-15T04:46:39Z","severity":"5.0","host_ip":"172.16.201.4","resultId":"2a9e8975-ffef-4336-96b9-b2fc6f360948","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:46:39Z"},{"creation_time":"2023-06-15T04:12:28Z","severity":"5.0","host_ip":"172.16.208.31","resultId":"be469047-a829-4341-803b-b7a6ebc31240","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"80"},"description":"Here is the list of DCE/RPC or MSRPC services running on this host via the TCP protocol: Port: 49152/tcp UUID: d95afe70-a6d5-4259-822e-2c84da1ddb0d, version 1 Endpoint: ncacn_ip_tcp:172.16.208.31[49152] Port: 49153/tcp UUID: 30adc50c-5cbc-46ce-9a0e-91914789e23c, version 1 Endpoint: ncacn_ip_tcp:172.16.208.31[49153] Annotation: NRP server endpoint UUID: 3c4728c5-f0ab-448b-bda1-6ce01eb0a6d5, version 1 Endpoint: ncacn_ip_tcp:172.16.208.31[49153] Annotation: DHCP Client LRPC Endpoint UUID: 3c4728c5-f0ab-448b-bda1-6ce01eb0a6d6, version 1 Endpoint: ncacn_ip_tcp:172.16.208.31[49153] Annotation: DHCPv6 Client LRPC Endpoint UUID: f6beaff7-1e19-4fbb-9f8f-b89e2018337c, version 1 Endpoint: ncacn_ip_tcp:172.16.208.31[49153] Annotation: Event log TCPIP Port: 49154/tcp UUID: 86d35949-83c9-4044-b424-db363231fd0c, version 1 Endpoint: ncacn_ip_tcp:172.16.208.31[49154] UUID: 98716d03-89ac-44c7-bb8c-285824e51c4a, version 1 Endpoint: ncacn_ip_tcp:172.16.208.31[49154] Annotation: XactSrv service Port: 49155/tcp UUID: 367abb81-9844-35f1-ad32-98f038001003, version 2 Endpoint: ncacn_ip_tcp:172.16.208.31[49155] Port: 49160/tcp UUID: 12345778-1234-abcd-ef00-0123456789ac, version 1 Endpoint: ncacn_ip_tcp:172.16.208.31[49160] Named pipe : lsass Win32 service or process : lsass.exe Description : SAM access Note: DCE/RPC or MSRPC services running on this host locally were identified. Reporting this list is not enabled by default due to the possible large size of this list. See the script preferences to enable this reporting.","scan_nvt_version":"2022-06-03T10:17:07Z","nvt":{"name":"DCE/RPC and MSRPC Services Enumeration Reporting","oid":"1.3.6.1.4.1.25623.1.0.10736","type":"nvt","family":"Windows","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:P/I:N/A:N|summary=Distributed Computing Environment / Remote Procedure Calls (DCE/RPC) or MSRPC services running on the remote host can be enumerated by connecting on port 135 and doing the appropriate queries.|insight=|affected=|impact=An attacker may use this fact to gain more knowledge about the remote host.|solution=Filter incoming traffic to this ports.|vuldetect=|solution_type=Mitigation"},"original_threat":"Medium","hostname":"WIN7-2023BHZNCR","port":"135/tcp","name":"DCE/RPC and MSRPC Services Enumeration Reporting","comment":"","threat":"Medium","modification_time":"2023-06-15T04:12:28Z"},{"creation_time":"2023-06-15T04:47:18Z","severity":"5.0","host_ip":"172.16.201.22","resultId":"86d4bea1-7240-445d-9795-bc0f1fa90048","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:47:18Z"},{"creation_time":"2023-06-15T04:46:23Z","severity":"5.0","host_ip":"172.16.201.24","resultId":"727208fe-da55-4283-9683-32f307c0709f","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:46:23Z"},{"creation_time":"2023-06-15T04:45:52Z","severity":"5.0","host_ip":"172.16.201.6","resultId":"94c48e2a-3b9c-4458-b9e1-d1cbec24f756","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:45:52Z"},{"creation_time":"2023-06-15T04:13:23Z","severity":"5.0","host_ip":"172.16.201.11","resultId":"c7576a89-3e94-4c65-ae20-aafa3f3b0e98","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:13:23Z"},{"creation_time":"2023-06-15T04:42:06Z","severity":"5.0","host_ip":"172.16.201.7","resultId":"9841d88f-674b-404c-ace9-bdbe7f40b757","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:42:06Z"},{"creation_time":"2023-06-15T04:44:40Z","severity":"5.0","host_ip":"172.16.201.11","resultId":"bdeb127c-e1e2-4735-a249-eac25bf357cd","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:44:40Z"},{"creation_time":"2023-06-15T04:22:57Z","severity":"5.0","host_ip":"172.16.201.22","resultId":"eec5efb4-7733-4170-a219-fbbff31c76d8","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:22:57Z"},{"creation_time":"2023-06-15T06:17:32Z","severity":"5.0","host_ip":"172.16.200.77","resultId":"50cf8773-c16f-4d9b-8c48-3b1489d3aa0e","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"80"},"description":"The cookies: Set-Cookie: PHPSESSID=***replaced***; path=/ are missing the \"HttpOnly\" attribute.","scan_nvt_version":"2023-01-11T10:12:37Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Missing 'HttpOnly' Cookie Attribute (HTTP)","oid":"1.3.6.1.4.1.25623.1.0.105925","type":"nvt","family":"Web application abuses","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:P/I:N/A:N|summary=The remote HTTP web server / application is missing to set the 'HttpOnly' cookie attribute for one or more sent HTTP cookie.|insight=The flaw exists if a session cookie is not using the 'HttpOnly' cookie attribute. This allows a cookie to be accessed by JavaScript which could lead to session hijacking attacks.|affected=Any web application with session handling in cookies.|impact=|solution=Set the 'HttpOnly' attribute for any session cookie.|vuldetect=Checks all cookies sent by the remote HTTP web server / application for a missing 'HttpOnly' cookie attribute.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"Missing 'HttpOnly' Cookie Attribute (HTTP)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:17:32Z"},{"creation_time":"2023-06-15T06:20:10Z","severity":"5.0","host_ip":"172.16.200.75","resultId":"d0b664f5-3d36-4861-9b58-3f43d3129369","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"80"},"description":"The cookies: Set-Cookie: csrftoken=Hx5eQUcnWEWIhqMDivvXLruKWosxVjUwNhp0HesigNeKim9A2E4HgEYYvPE2PGVz; expires=Thu, 13-Jun-2024 06:10:56 GMT; Max-Age=***replaced***; Path=/ are missing the \"HttpOnly\" attribute.","scan_nvt_version":"2023-01-11T10:12:37Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Missing 'HttpOnly' Cookie Attribute (HTTP)","oid":"1.3.6.1.4.1.25623.1.0.105925","type":"nvt","family":"Web application abuses","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:P/I:N/A:N|summary=The remote HTTP web server / application is missing to set the 'HttpOnly' cookie attribute for one or more sent HTTP cookie.|insight=The flaw exists if a session cookie is not using the 'HttpOnly' cookie attribute. This allows a cookie to be accessed by JavaScript which could lead to session hijacking attacks.|affected=Any web application with session handling in cookies.|impact=|solution=Set the 'HttpOnly' attribute for any session cookie.|vuldetect=Checks all cookies sent by the remote HTTP web server / application for a missing 'HttpOnly' cookie attribute.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"443/tcp","name":"Missing 'HttpOnly' Cookie Attribute (HTTP)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:20:10Z"},{"creation_time":"2023-06-15T11:56:23Z","severity":"5.0","host_ip":"172.16.201.13","resultId":"8f4f4264-dd65-459e-9f3d-3f85a3679e6d","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"70"},"description":"The following indicates that the remote SSL/TLS service is affected: Protocol Version | Successful re-done SSL/TLS handshakes (Renegotiation) over an existing / already established SSL/TLS connection ---------------------------------------------------------------------------------------------------------------------------------- TLSv1.2 | 10","scan_nvt_version":"2021-11-15T10:28:20Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","oid":"1.3.6.1.4.1.25623.1.0.117761","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:N/A:P|summary=The remote SSL/TLS service is prone to a denial of service (DoS) vulnerability.|insight=The flaw exists because the remote SSL/TLS service does not properly restrict client-initiated renegotiation within the SSL and TLS protocols. Note: The referenced CVEs are affecting OpenSSL and Mozilla Network Security Services (NSS) but both are in a DISPUTED state with the following rationale: > It can also be argued that it is the responsibility of server deployments, not a security library, to prevent or limit renegotiation when it is inappropriate within a specific environment. Both CVEs are still kept in this VT as a reference to the origin of this flaw.|affected=Every SSL/TLS service which does not properly restrict client-initiated renegotiation.|impact=The flaw might make it easier for remote attackers to cause a DoS (CPU consumption) by performing many renegotiations within a single connection.|solution=Users should contact their vendors for specific patch information. A general solution is to remove/disable renegotiation capabilities altogether from/in the affected SSL/TLS service.|vuldetect=Checks if the remote service allows to re-do the same SSL/TLS handshake (Renegotiation) over an existing / already established SSL/TLS connection.|solution_type=VendorFix"},"original_threat":"Medium","hostname":"","port":"5989/tcp","name":"SSL/TLS: Renegotiation DoS Vulnerability (CVE-2011-1473, CVE-2011-5094)","comment":"","threat":"Medium","modification_time":"2023-06-15T11:56:23Z"},{"creation_time":"2023-06-15T06:25:03Z","severity":"5.0","host_ip":"172.16.200.76","resultId":"0c9676d8-f685-43bf-8155-2c17f3d2f77d","gvm_asset_id":"","original_severity":"5","qod":{"type":"","value":"99"},"description":"The certificate of the remote service expired on 2023-01-24 07:37:53. Certificate details: fingerprint (SHA-1) | C53D1CA24E2B3799EA927E4AB5CDE6D33298A298 fingerprint (SHA-256) | 96C2656716E986EFEE8EC04F34B96FD74C9F64541861C71A12482D900CFB3740 issued by | CN=NSFOCUSCA,C=CA public key algorithm | RSA public key size (bits) | 2048 serial | 00BB17D51D signature algorithm | sha1WithRSAEncryption subject | CN=172.16.200.76,O=NSFOCUS,C=CA subject alternative names (SAN) | None valid from | 2022-01-24 07:37:53 UTC valid until | 2023-01-24 07:37:53 UTC","scan_nvt_version":"2021-11-22T15:32:39Z","nvt":{"name":"SSL/TLS: Certificate Expired","oid":"1.3.6.1.4.1.25623.1.0.103955","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:L/Au:N/C:N/I:P/A:N|summary=The remote server's SSL/TLS certificate has already expired.|insight=This script checks expiry dates of certificates associated with SSL/TLS-enabled services on the target and reports whether any have already expired.|affected=|impact=|solution=Replace the SSL/TLS certificate by a new one.|vuldetect=|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"5003/tcp","name":"SSL/TLS: Certificate Expired","comment":"","threat":"Medium","modification_time":"2023-06-15T06:25:03Z"},{"creation_time":"2023-06-15T06:45:27Z","severity":"4.8","host_ip":"192.168.5.175","resultId":"966895f5-4ceb-4f88-b4d0-d9a678189aab","gvm_asset_id":"","original_severity":"4.8","qod":{"type":"","value":"80"},"description":"The following input fields where identified (URL:input name): http://192.168.5.175:9208/druid/login.html:loginPassword","scan_nvt_version":"2020-08-24T15:18:35Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"Cleartext Transmission of Sensitive Information via HTTP","oid":"1.3.6.1.4.1.25623.1.0.108440","type":"nvt","family":"Web application abuses","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:A/AC:L/Au:N/C:P/I:P/A:N|summary=The host / application transmits sensitive information (username, passwords) in cleartext via HTTP.|insight=|affected=Hosts / applications which doesn't enforce the transmission of sensitive data via an encrypted SSL/TLS connection.|impact=An attacker could use this situation to compromise or eavesdrop on the HTTP communication between the client and the server using a man-in-the-middle attack to get access to sensitive data like usernames or passwords.|solution=Enforce the transmission of sensitive data via an encrypted SSL/TLS connection. Additionally make sure the host / application is redirecting all users to the secured SSL/TLS connection before allowing to input sensitive data into the mentioned functions.|vuldetect=Evaluate previous collected information and check if the host / application is not enforcing the transmission of sensitive data via an encrypted SSL/TLS connection. The script is currently checking the following: - HTTP Basic Authentication (Basic Auth) - HTTP Forms (e.g. Login) with input field of type 'password'|solution_type=Workaround"},"original_threat":"Medium","hostname":"","port":"9208/tcp","name":"Cleartext Transmission of Sensitive Information via HTTP","comment":"","threat":"Medium","modification_time":"2023-06-15T06:45:27Z"},{"creation_time":"2023-06-15T04:14:11Z","severity":"4.8","host_ip":"172.16.200.56","resultId":"3eebc63f-da83-4110-acc6-2131823cba2d","gvm_asset_id":"","original_severity":"4.8","qod":{"type":"","value":"70"},"description":"The remote FTP service accepts logins without a previous sent 'AUTH TLS' command. Response(s): Non-anonymous sessions: 331 Password required for openvasvt. Anonymous sessions: 331 Password required for anonymous. The remote FTP service supports the 'AUTH TLS' command but isn't enforcing the use of it for: - Non-anonymous sessions - Anonymous sessions","scan_nvt_version":"2020-08-24T08:40:10Z","nvt":{"name":"FTP Unencrypted Cleartext Login","oid":"1.3.6.1.4.1.25623.1.0.108528","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:A/AC:L/Au:N/C:P/I:P/A:N|summary=The remote host is running a FTP service that allows cleartext logins over unencrypted connections.|insight=|affected=|impact=An attacker can uncover login names and passwords by sniffing traffic to the FTP service.|solution=Enable FTPS or enforce the connection via the 'AUTH TLS' command. Please see the manual of the FTP service for more information.|vuldetect=Tries to login to a non FTPS enabled FTP service without sending a 'AUTH TLS' command first and checks if the service is accepting the login without enforcing the use of the 'AUTH TLS' command.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"21/tcp","name":"FTP Unencrypted Cleartext Login","comment":"","threat":"Medium","modification_time":"2023-06-15T04:14:11Z"},{"creation_time":"2023-06-15T06:18:48Z","severity":"4.8","host_ip":"172.16.200.56","resultId":"f8087abb-cc4a-4adb-9ed2-82e7f7bc341e","gvm_asset_id":"","original_severity":"4.8","qod":{"type":"","value":"70"},"description":"The remote FTP service accepts logins without a previous sent 'AUTH TLS' command. Response(s): Non-anonymous sessions: 331 Password required for openvasvt. Anonymous sessions: 331 Password required for anonymous. The remote FTP service supports the 'AUTH TLS' command but isn't enforcing the use of it for: - Non-anonymous sessions - Anonymous sessions","scan_nvt_version":"2020-08-24T08:40:10Z","nvt":{"name":"FTP Unencrypted Cleartext Login","oid":"1.3.6.1.4.1.25623.1.0.108528","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:A/AC:L/Au:N/C:P/I:P/A:N|summary=The remote host is running a FTP service that allows cleartext logins over unencrypted connections.|insight=|affected=|impact=An attacker can uncover login names and passwords by sniffing traffic to the FTP service.|solution=Enable FTPS or enforce the connection via the 'AUTH TLS' command. Please see the manual of the FTP service for more information.|vuldetect=Tries to login to a non FTPS enabled FTP service without sending a 'AUTH TLS' command first and checks if the service is accepting the login without enforcing the use of the 'AUTH TLS' command.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"21/tcp","name":"FTP Unencrypted Cleartext Login","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:48Z"},{"creation_time":"2023-06-15T04:16:56Z","severity":"4.3","host_ip":"172.16.200.57","resultId":"2fa77868-e7ed-4256-8b9f-2fa72173ea34","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:16:56Z"},{"creation_time":"2023-06-15T04:14:36Z","severity":"4.3","host_ip":"172.16.200.56","resultId":"ca61bb0c-0618-409d-9068-c9a07f484ccb","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:14:36Z"},{"creation_time":"2023-06-15T04:11:37Z","severity":"4.3","host_ip":"172.16.200.55","resultId":"1cb4b67a-0fea-4be1-9f6a-9290e6561905","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:11:37Z"},{"creation_time":"2023-06-15T04:22:50Z","severity":"4.3","host_ip":"172.16.200.54","resultId":"d039c515-7e21-46bc-9098-3ee46d071623","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T04:22:50Z"},{"creation_time":"2023-06-15T06:26:23Z","severity":"4.3","host_ip":"172.16.200.73","resultId":"8c5baa3e-2000-4a00-806a-941f25d126ec","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"98"},"description":"In addition to TLSv1.2+ the service is also providing the deprecated TLSv1.0 and TLSv1.1 protocols and supports one or more ciphers. Those supported ciphers can be found in the 'SSL/TLS: Report Supported Cipher Suites' (OID: 1.3.6.1.4.1.25623.1.0.802067) VT.","scan_nvt_version":"2021-07-19T08:11:48Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","oid":"1.3.6.1.4.1.25623.1.0.117274","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=It was possible to detect the usage of the deprecated TLSv1.0 and/or TLSv1.1 protocol on this system.|insight=The TLSv1.0 and TLSv1.1 protocols contain known cryptographic flaws like: - CVE-2011-3389: Browser Exploit Against SSL/TLS (BEAST) - CVE-2015-0204: Factoring Attack on RSA-EXPORT Keys Padding Oracle On Downgraded Legacy Encryption (FREAK)|affected=All services providing an encrypted communication using the TLSv1.0 and/or TLSv1.1 protocols.|impact=An attacker might be able to use the known cryptographic flaws to eavesdrop the connection between clients and the service to get access to sensitive data transferred within the secured connection. Furthermore newly uncovered vulnerabilities in this protocols won't receive security updates anymore.|solution=It is recommended to disable the deprecated TLSv1.0 and/or TLSv1.1 protocols in favor of the TLSv1.2+ protocols. Please see the references for more information.|vuldetect=Check the used TLS protocols of the services provided by this system.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","comment":"","threat":"Medium","modification_time":"2023-06-15T06:26:23Z"},{"creation_time":"2023-06-15T06:18:28Z","severity":"4.3","host_ip":"172.16.200.54","resultId":"15966d1f-7172-43dc-80dc-11737dc2ceb8","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:28Z"},{"creation_time":"2023-06-15T11:55:08Z","severity":"4.3","host_ip":"172.16.200.60","resultId":"b54d8be1-74a9-4006-bef8-4117c09e0693","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): aes128-cbc aes192-cbc aes256-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): aes128-cbc aes192-cbc aes256-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T11:55:08Z"},{"creation_time":"2023-06-15T06:07:15Z","severity":"4.3","host_ip":"172.16.200.54","resultId":"91f190de-fca3-4f9b-8020-72651e3234eb","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:07:15Z"},{"creation_time":"2023-06-15T06:18:43Z","severity":"4.3","host_ip":"172.16.200.55","resultId":"13d8cb57-7433-4ec7-a4b9-dea7c2848679","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:43Z"},{"creation_time":"2023-06-15T06:18:48Z","severity":"4.3","host_ip":"172.16.200.56","resultId":"30b9e7c1-c524-4af5-ae9e-1e5d1b58d224","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:18:48Z"},{"creation_time":"2023-06-15T06:19:09Z","severity":"4.3","host_ip":"172.16.200.57","resultId":"96843dc7-1fd2-4f5e-bfb0-dcd175ae2f7f","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes256-cbc des-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:19:09Z"},{"creation_time":"2023-06-15T06:24:37Z","severity":"4.3","host_ip":"172.16.200.74","resultId":"2cefc767-8bac-4c67-be41-e61c0c9a851d","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"98"},"description":"In addition to TLSv1.2+ the service is also providing the deprecated TLSv1.0 and TLSv1.1 protocols and supports one or more ciphers. Those supported ciphers can be found in the 'SSL/TLS: Report Supported Cipher Suites' (OID: 1.3.6.1.4.1.25623.1.0.802067) VT.","scan_nvt_version":"2021-07-19T08:11:48Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","oid":"1.3.6.1.4.1.25623.1.0.117274","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=It was possible to detect the usage of the deprecated TLSv1.0 and/or TLSv1.1 protocol on this system.|insight=The TLSv1.0 and TLSv1.1 protocols contain known cryptographic flaws like: - CVE-2011-3389: Browser Exploit Against SSL/TLS (BEAST) - CVE-2015-0204: Factoring Attack on RSA-EXPORT Keys Padding Oracle On Downgraded Legacy Encryption (FREAK)|affected=All services providing an encrypted communication using the TLSv1.0 and/or TLSv1.1 protocols.|impact=An attacker might be able to use the known cryptographic flaws to eavesdrop the connection between clients and the service to get access to sensitive data transferred within the secured connection. Furthermore newly uncovered vulnerabilities in this protocols won't receive security updates anymore.|solution=It is recommended to disable the deprecated TLSv1.0 and/or TLSv1.1 protocols in favor of the TLSv1.2+ protocols. Please see the references for more information.|vuldetect=Check the used TLS protocols of the services provided by this system.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","comment":"","threat":"Medium","modification_time":"2023-06-15T06:24:37Z"},{"creation_time":"2023-06-15T06:29:30Z","severity":"4.3","host_ip":"172.16.200.73","resultId":"a94b906d-3165-4f49-a2ac-e7238f99b822","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"98"},"description":"In addition to TLSv1.2+ the service is also providing the deprecated TLSv1.0 and TLSv1.1 protocols and supports one or more ciphers. Those supported ciphers can be found in the 'SSL/TLS: Report Supported Cipher Suites' (OID: 1.3.6.1.4.1.25623.1.0.802067) VT.","scan_nvt_version":"2021-07-19T08:11:48Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","oid":"1.3.6.1.4.1.25623.1.0.117274","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=It was possible to detect the usage of the deprecated TLSv1.0 and/or TLSv1.1 protocol on this system.|insight=The TLSv1.0 and TLSv1.1 protocols contain known cryptographic flaws like: - CVE-2011-3389: Browser Exploit Against SSL/TLS (BEAST) - CVE-2015-0204: Factoring Attack on RSA-EXPORT Keys Padding Oracle On Downgraded Legacy Encryption (FREAK)|affected=All services providing an encrypted communication using the TLSv1.0 and/or TLSv1.1 protocols.|impact=An attacker might be able to use the known cryptographic flaws to eavesdrop the connection between clients and the service to get access to sensitive data transferred within the secured connection. Furthermore newly uncovered vulnerabilities in this protocols won't receive security updates anymore.|solution=It is recommended to disable the deprecated TLSv1.0 and/or TLSv1.1 protocols in favor of the TLSv1.2+ protocols. Please see the references for more information.|vuldetect=Check the used TLS protocols of the services provided by this system.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8081/tcp","name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","comment":"","threat":"Medium","modification_time":"2023-06-15T06:29:30Z"},{"creation_time":"2023-06-15T06:25:08Z","severity":"4.3","host_ip":"172.16.200.76","resultId":"b2d7c62a-e326-46d5-8e20-5c3dbb1c4b9c","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"98"},"description":"In addition to TLSv1.2+ the service is also providing the deprecated TLSv1.1 protocol and supports one or more ciphers. Those supported ciphers can be found in the 'SSL/TLS: Report Supported Cipher Suites' (OID: 1.3.6.1.4.1.25623.1.0.802067) VT.","scan_nvt_version":"2021-07-19T08:11:48Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","oid":"1.3.6.1.4.1.25623.1.0.117274","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=It was possible to detect the usage of the deprecated TLSv1.0 and/or TLSv1.1 protocol on this system.|insight=The TLSv1.0 and TLSv1.1 protocols contain known cryptographic flaws like: - CVE-2011-3389: Browser Exploit Against SSL/TLS (BEAST) - CVE-2015-0204: Factoring Attack on RSA-EXPORT Keys Padding Oracle On Downgraded Legacy Encryption (FREAK)|affected=All services providing an encrypted communication using the TLSv1.0 and/or TLSv1.1 protocols.|impact=An attacker might be able to use the known cryptographic flaws to eavesdrop the connection between clients and the service to get access to sensitive data transferred within the secured connection. Furthermore newly uncovered vulnerabilities in this protocols won't receive security updates anymore.|solution=It is recommended to disable the deprecated TLSv1.0 and/or TLSv1.1 protocols in favor of the TLSv1.2+ protocols. Please see the references for more information.|vuldetect=Check the used TLS protocols of the services provided by this system.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"443/tcp","name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","comment":"","threat":"Medium","modification_time":"2023-06-15T06:25:08Z"},{"creation_time":"2023-06-15T06:25:08Z","severity":"4.3","host_ip":"172.16.200.76","resultId":"d4da8bbe-d70b-4525-b061-f0df447830fc","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"98"},"description":"In addition to TLSv1.2+ the service is also providing the deprecated TLSv1.0 and TLSv1.1 protocols and supports one or more ciphers. Those supported ciphers can be found in the 'SSL/TLS: Report Supported Cipher Suites' (OID: 1.3.6.1.4.1.25623.1.0.802067) VT.","scan_nvt_version":"2021-07-19T08:11:48Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","oid":"1.3.6.1.4.1.25623.1.0.117274","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=It was possible to detect the usage of the deprecated TLSv1.0 and/or TLSv1.1 protocol on this system.|insight=The TLSv1.0 and TLSv1.1 protocols contain known cryptographic flaws like: - CVE-2011-3389: Browser Exploit Against SSL/TLS (BEAST) - CVE-2015-0204: Factoring Attack on RSA-EXPORT Keys Padding Oracle On Downgraded Legacy Encryption (FREAK)|affected=All services providing an encrypted communication using the TLSv1.0 and/or TLSv1.1 protocols.|impact=An attacker might be able to use the known cryptographic flaws to eavesdrop the connection between clients and the service to get access to sensitive data transferred within the secured connection. Furthermore newly uncovered vulnerabilities in this protocols won't receive security updates anymore.|solution=It is recommended to disable the deprecated TLSv1.0 and/or TLSv1.1 protocols in favor of the TLSv1.2+ protocols. Please see the references for more information.|vuldetect=Check the used TLS protocols of the services provided by this system.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"5003/tcp","name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","comment":"","threat":"Medium","modification_time":"2023-06-15T06:25:08Z"},{"creation_time":"2023-06-15T06:25:08Z","severity":"4.3","host_ip":"172.16.200.76","resultId":"027d20c2-44f0-4d49-9bb6-c4e3ebedad40","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"98"},"description":"In addition to TLSv1.2+ the service is also providing the deprecated TLSv1.1 protocol and supports one or more ciphers. Those supported ciphers can be found in the 'SSL/TLS: Report Supported Cipher Suites' (OID: 1.3.6.1.4.1.25623.1.0.802067) VT.","scan_nvt_version":"2021-07-19T08:11:48Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","oid":"1.3.6.1.4.1.25623.1.0.117274","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=It was possible to detect the usage of the deprecated TLSv1.0 and/or TLSv1.1 protocol on this system.|insight=The TLSv1.0 and TLSv1.1 protocols contain known cryptographic flaws like: - CVE-2011-3389: Browser Exploit Against SSL/TLS (BEAST) - CVE-2015-0204: Factoring Attack on RSA-EXPORT Keys Padding Oracle On Downgraded Legacy Encryption (FREAK)|affected=All services providing an encrypted communication using the TLSv1.0 and/or TLSv1.1 protocols.|impact=An attacker might be able to use the known cryptographic flaws to eavesdrop the connection between clients and the service to get access to sensitive data transferred within the secured connection. Furthermore newly uncovered vulnerabilities in this protocols won't receive security updates anymore.|solution=It is recommended to disable the deprecated TLSv1.0 and/or TLSv1.1 protocols in favor of the TLSv1.2+ protocols. Please see the references for more information.|vuldetect=Check the used TLS protocols of the services provided by this system.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8444/tcp","name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","comment":"","threat":"Medium","modification_time":"2023-06-15T06:25:08Z"},{"creation_time":"2023-06-15T06:41:36Z","severity":"4.3","host_ip":"192.168.5.174","resultId":"cd7c96b2-c215-4c5c-b9bb-fd63c18e7ed5","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes192-cbc aes256-cbc blowfish-cbc cast128-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes192-cbc aes256-cbc blowfish-cbc cast128-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:41:36Z"},{"creation_time":"2023-06-15T06:43:47Z","severity":"4.3","host_ip":"192.168.5.175","resultId":"6aceb7f0-7fd4-40b9-bf40-bffb8ce891d2","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server encryption algorithm(s): 3des-cbc aes128-cbc aes192-cbc aes256-cbc blowfish-cbc cast128-cbc The remote SSH server supports the following weak server-to-client encryption algorithm(s): 3des-cbc aes128-cbc aes192-cbc aes256-cbc blowfish-cbc cast128-cbc","scan_nvt_version":"2022-12-09T10:11:04Z","nvt":{"refs":[{"type":"url"},{"type":"url"}],"name":"Weak Encryption Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105611","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak encryption algorithm(s).|insight=- The 'arcfour' cipher is the Arcfour stream cipher with 128-bit keys. The Arcfour cipher is believed to be compatible with the RC4 cipher [SCHNEIER]. Arcfour (and RC4) has problems with weak keys, and should not be used anymore. - The 'none' algorithm specifies that no encryption is to be done. Note that this method provides no confidentiality protection, and it is NOT RECOMMENDED to use it. - A vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext.|affected=|impact=|solution=Disable the reported weak encryption algorithm(s).|vuldetect=Checks the supported encryption algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak encryption algorithms are defined as the following: - Arcfour (RC4) cipher based algorithms - none algorithm - CBC mode cipher based algorithms|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"22/tcp","name":"Weak Encryption Algorithm(s) Supported (SSH)","comment":"","threat":"Medium","modification_time":"2023-06-15T06:43:47Z"},{"creation_time":"2023-06-15T11:57:53Z","severity":"4.3","host_ip":"172.16.200.60","resultId":"ed34524b-cd67-4b48-b2cb-15dd1b5daa06","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"98"},"description":"In addition to TLSv1.2+ the service is also providing the deprecated TLSv1.1 protocol and supports one or more ciphers. Those supported ciphers can be found in the 'SSL/TLS: Report Supported Cipher Suites' (OID: 1.3.6.1.4.1.25623.1.0.802067) VT.","scan_nvt_version":"2021-07-19T08:11:48Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","oid":"1.3.6.1.4.1.25623.1.0.117274","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=It was possible to detect the usage of the deprecated TLSv1.0 and/or TLSv1.1 protocol on this system.|insight=The TLSv1.0 and TLSv1.1 protocols contain known cryptographic flaws like: - CVE-2011-3389: Browser Exploit Against SSL/TLS (BEAST) - CVE-2015-0204: Factoring Attack on RSA-EXPORT Keys Padding Oracle On Downgraded Legacy Encryption (FREAK)|affected=All services providing an encrypted communication using the TLSv1.0 and/or TLSv1.1 protocols.|impact=An attacker might be able to use the known cryptographic flaws to eavesdrop the connection between clients and the service to get access to sensitive data transferred within the secured connection. Furthermore newly uncovered vulnerabilities in this protocols won't receive security updates anymore.|solution=It is recommended to disable the deprecated TLSv1.0 and/or TLSv1.1 protocols in favor of the TLSv1.2+ protocols. Please see the references for more information.|vuldetect=Check the used TLS protocols of the services provided by this system.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"8443/tcp","name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","comment":"","threat":"Medium","modification_time":"2023-06-15T11:57:53Z"},{"creation_time":"2023-06-15T11:57:53Z","severity":"4.3","host_ip":"172.16.200.60","resultId":"1f0c5a1a-d2c6-4685-bde2-b8dd0ab4531e","gvm_asset_id":"","original_severity":"4.3","qod":{"type":"","value":"98"},"description":"In addition to TLSv1.2+ the service is also providing the deprecated TLSv1.1 protocol and supports one or more ciphers. Those supported ciphers can be found in the 'SSL/TLS: Report Supported Cipher Suites' (OID: 1.3.6.1.4.1.25623.1.0.802067) VT.","scan_nvt_version":"2021-07-19T08:11:48Z","nvt":{"refs":[{"type":"cve"},{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"},{"type":"dfn-cert"}],"name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","oid":"1.3.6.1.4.1.25623.1.0.117274","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:M/Au:N/C:P/I:N/A:N|summary=It was possible to detect the usage of the deprecated TLSv1.0 and/or TLSv1.1 protocol on this system.|insight=The TLSv1.0 and TLSv1.1 protocols contain known cryptographic flaws like: - CVE-2011-3389: Browser Exploit Against SSL/TLS (BEAST) - CVE-2015-0204: Factoring Attack on RSA-EXPORT Keys Padding Oracle On Downgraded Legacy Encryption (FREAK)|affected=All services providing an encrypted communication using the TLSv1.0 and/or TLSv1.1 protocols.|impact=An attacker might be able to use the known cryptographic flaws to eavesdrop the connection between clients and the service to get access to sensitive data transferred within the secured connection. Furthermore newly uncovered vulnerabilities in this protocols won't receive security updates anymore.|solution=It is recommended to disable the deprecated TLSv1.0 and/or TLSv1.1 protocols in favor of the TLSv1.2+ protocols. Please see the references for more information.|vuldetect=Check the used TLS protocols of the services provided by this system.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"443/tcp","name":"SSL/TLS: Deprecated TLSv1.0 and TLSv1.1 Protocol Detection","comment":"","threat":"Medium","modification_time":"2023-06-15T11:57:53Z"},{"creation_time":"2023-06-15T06:33:57Z","severity":"4.0","host_ip":"172.16.200.79","resultId":"d03068fd-6f17-4c59-b9ac-b7ada73a0718","gvm_asset_id":"","original_severity":"4","qod":{"type":"","value":"80"},"description":"The following certificates are part of the certificate chain but using insecure signature algorithms: Subject: OU=NPAI,O=NSFOCUS,L=Beijing,ST=Beijing,C=CN Signature Algorithm: sha1WithRSAEncryption","scan_nvt_version":"2021-10-15T11:13:32Z","nvt":{"refs":[{"type":"url"}],"name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","oid":"1.3.6.1.4.1.25623.1.0.105880","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:P/A:N|summary=The remote service is using a SSL/TLS certificate in the certificate chain that has been signed using a cryptographically weak hashing algorithm.|insight=The following hashing algorithms used for signing SSL/TLS certificates are considered cryptographically weak and not secure enough for ongoing use: - Secure Hash Algorithm 1 (SHA-1) - Message Digest 5 (MD5) - Message Digest 4 (MD4) - Message Digest 2 (MD2) Beginning as late as January 2017 and as early as June 2016, browser developers such as Microsoft and Google will begin warning users when visiting web sites that use SHA-1 signed Secure Socket Layer (SSL) certificates. NOTE: The script preference allows to set one or more custom SHA-1 fingerprints of CA certificates which are trusted by this routine. The fingerprints needs to be passed comma-separated and case-insensitive: Fingerprint1 or fingerprint1, Fingerprint2|affected=|impact=|solution=Servers that use SSL/TLS certificates signed with a weak SHA-1, MD5, MD4 or MD2 hashing algorithm will need to obtain new SHA-2 signed SSL/TLS certificates to avoid web browser SSL/TLS certificate warnings.|vuldetect=Check which hashing algorithm was used to sign the remote SSL/TLS certificate.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"5666/tcp","name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","comment":"","threat":"Medium","modification_time":"2023-06-15T06:33:57Z"},{"creation_time":"2023-06-15T06:33:57Z","severity":"4.0","host_ip":"172.16.200.79","resultId":"a347d35f-44c5-4bc9-bac1-4c78519553d0","gvm_asset_id":"","original_severity":"4","qod":{"type":"","value":"80"},"description":"The following certificates are part of the certificate chain but using insecure signature algorithms: Subject: OU=NPAI,O=NSFOCUS,L=Beijing,ST=Beijing,C=CN Signature Algorithm: sha1WithRSAEncryption","scan_nvt_version":"2021-10-15T11:13:32Z","nvt":{"refs":[{"type":"url"}],"name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","oid":"1.3.6.1.4.1.25623.1.0.105880","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:P/A:N|summary=The remote service is using a SSL/TLS certificate in the certificate chain that has been signed using a cryptographically weak hashing algorithm.|insight=The following hashing algorithms used for signing SSL/TLS certificates are considered cryptographically weak and not secure enough for ongoing use: - Secure Hash Algorithm 1 (SHA-1) - Message Digest 5 (MD5) - Message Digest 4 (MD4) - Message Digest 2 (MD2) Beginning as late as January 2017 and as early as June 2016, browser developers such as Microsoft and Google will begin warning users when visiting web sites that use SHA-1 signed Secure Socket Layer (SSL) certificates. NOTE: The script preference allows to set one or more custom SHA-1 fingerprints of CA certificates which are trusted by this routine. The fingerprints needs to be passed comma-separated and case-insensitive: Fingerprint1 or fingerprint1, Fingerprint2|affected=|impact=|solution=Servers that use SSL/TLS certificates signed with a weak SHA-1, MD5, MD4 or MD2 hashing algorithm will need to obtain new SHA-2 signed SSL/TLS certificates to avoid web browser SSL/TLS certificate warnings.|vuldetect=Check which hashing algorithm was used to sign the remote SSL/TLS certificate.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"5005/tcp","name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","comment":"","threat":"Medium","modification_time":"2023-06-15T06:33:57Z"},{"creation_time":"2023-06-15T06:33:57Z","severity":"4.0","host_ip":"172.16.200.79","resultId":"84ae851e-969d-4490-a699-3da725fe5714","gvm_asset_id":"","original_severity":"4","qod":{"type":"","value":"80"},"description":"The following certificates are part of the certificate chain but using insecure signature algorithms: Subject: OU=NPAI,O=NSFOCUS,L=Beijing,ST=Beijing,C=CN Signature Algorithm: sha1WithRSAEncryption","scan_nvt_version":"2021-10-15T11:13:32Z","nvt":{"refs":[{"type":"url"}],"name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","oid":"1.3.6.1.4.1.25623.1.0.105880","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:P/A:N|summary=The remote service is using a SSL/TLS certificate in the certificate chain that has been signed using a cryptographically weak hashing algorithm.|insight=The following hashing algorithms used for signing SSL/TLS certificates are considered cryptographically weak and not secure enough for ongoing use: - Secure Hash Algorithm 1 (SHA-1) - Message Digest 5 (MD5) - Message Digest 4 (MD4) - Message Digest 2 (MD2) Beginning as late as January 2017 and as early as June 2016, browser developers such as Microsoft and Google will begin warning users when visiting web sites that use SHA-1 signed Secure Socket Layer (SSL) certificates. NOTE: The script preference allows to set one or more custom SHA-1 fingerprints of CA certificates which are trusted by this routine. The fingerprints needs to be passed comma-separated and case-insensitive: Fingerprint1 or fingerprint1, Fingerprint2|affected=|impact=|solution=Servers that use SSL/TLS certificates signed with a weak SHA-1, MD5, MD4 or MD2 hashing algorithm will need to obtain new SHA-2 signed SSL/TLS certificates to avoid web browser SSL/TLS certificate warnings.|vuldetect=Check which hashing algorithm was used to sign the remote SSL/TLS certificate.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"4399/tcp","name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","comment":"","threat":"Medium","modification_time":"2023-06-15T06:33:57Z"},{"creation_time":"2023-06-15T06:33:57Z","severity":"4.0","host_ip":"172.16.200.79","resultId":"3cd02f54-5cd1-4817-8271-74ee26be52f5","gvm_asset_id":"","original_severity":"4","qod":{"type":"","value":"80"},"description":"The following certificates are part of the certificate chain but using insecure signature algorithms: Subject: OU=NPAI,O=NSFOCUS,L=Beijing,ST=Beijing,C=CN Signature Algorithm: sha1WithRSAEncryption","scan_nvt_version":"2021-10-15T11:13:32Z","nvt":{"refs":[{"type":"url"}],"name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","oid":"1.3.6.1.4.1.25623.1.0.105880","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:P/A:N|summary=The remote service is using a SSL/TLS certificate in the certificate chain that has been signed using a cryptographically weak hashing algorithm.|insight=The following hashing algorithms used for signing SSL/TLS certificates are considered cryptographically weak and not secure enough for ongoing use: - Secure Hash Algorithm 1 (SHA-1) - Message Digest 5 (MD5) - Message Digest 4 (MD4) - Message Digest 2 (MD2) Beginning as late as January 2017 and as early as June 2016, browser developers such as Microsoft and Google will begin warning users when visiting web sites that use SHA-1 signed Secure Socket Layer (SSL) certificates. NOTE: The script preference allows to set one or more custom SHA-1 fingerprints of CA certificates which are trusted by this routine. The fingerprints needs to be passed comma-separated and case-insensitive: Fingerprint1 or fingerprint1, Fingerprint2|affected=|impact=|solution=Servers that use SSL/TLS certificates signed with a weak SHA-1, MD5, MD4 or MD2 hashing algorithm will need to obtain new SHA-2 signed SSL/TLS certificates to avoid web browser SSL/TLS certificate warnings.|vuldetect=Check which hashing algorithm was used to sign the remote SSL/TLS certificate.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"4398/tcp","name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","comment":"","threat":"Medium","modification_time":"2023-06-15T06:33:57Z"},{"creation_time":"2023-06-15T06:25:08Z","severity":"4.0","host_ip":"172.16.200.76","resultId":"79e16cf2-3f2b-4a21-94f2-882a3c77ccb9","gvm_asset_id":"","original_severity":"4","qod":{"type":"","value":"80"},"description":"The following certificates are part of the certificate chain but using insecure signature algorithms: Subject: CN=172.16.200.76,O=NSFOCUS,C=CA Signature Algorithm: sha1WithRSAEncryption Subject: CN=NSFOCUSCA,C=CA Signature Algorithm: sha1WithRSAEncryption","scan_nvt_version":"2021-10-15T11:13:32Z","nvt":{"refs":[{"type":"url"}],"name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","oid":"1.3.6.1.4.1.25623.1.0.105880","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:P/A:N|summary=The remote service is using a SSL/TLS certificate in the certificate chain that has been signed using a cryptographically weak hashing algorithm.|insight=The following hashing algorithms used for signing SSL/TLS certificates are considered cryptographically weak and not secure enough for ongoing use: - Secure Hash Algorithm 1 (SHA-1) - Message Digest 5 (MD5) - Message Digest 4 (MD4) - Message Digest 2 (MD2) Beginning as late as January 2017 and as early as June 2016, browser developers such as Microsoft and Google will begin warning users when visiting web sites that use SHA-1 signed Secure Socket Layer (SSL) certificates. NOTE: The script preference allows to set one or more custom SHA-1 fingerprints of CA certificates which are trusted by this routine. The fingerprints needs to be passed comma-separated and case-insensitive: Fingerprint1 or fingerprint1, Fingerprint2|affected=|impact=|solution=Servers that use SSL/TLS certificates signed with a weak SHA-1, MD5, MD4 or MD2 hashing algorithm will need to obtain new SHA-2 signed SSL/TLS certificates to avoid web browser SSL/TLS certificate warnings.|vuldetect=Check which hashing algorithm was used to sign the remote SSL/TLS certificate.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"5003/tcp","name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","comment":"","threat":"Medium","modification_time":"2023-06-15T06:25:08Z"},{"creation_time":"2023-06-15T06:33:57Z","severity":"4.0","host_ip":"172.16.200.79","resultId":"15165032-ffad-4ed7-8f13-53b7edf95bf4","gvm_asset_id":"","original_severity":"4","qod":{"type":"","value":"80"},"description":"The following certificates are part of the certificate chain but using insecure signature algorithms: Subject: OU=NPAI,O=NSFOCUS,L=Beijing,ST=Beijing,C=CN Signature Algorithm: sha1WithRSAEncryption","scan_nvt_version":"2021-10-15T11:13:32Z","nvt":{"refs":[{"type":"url"}],"name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","oid":"1.3.6.1.4.1.25623.1.0.105880","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:P/A:N|summary=The remote service is using a SSL/TLS certificate in the certificate chain that has been signed using a cryptographically weak hashing algorithm.|insight=The following hashing algorithms used for signing SSL/TLS certificates are considered cryptographically weak and not secure enough for ongoing use: - Secure Hash Algorithm 1 (SHA-1) - Message Digest 5 (MD5) - Message Digest 4 (MD4) - Message Digest 2 (MD2) Beginning as late as January 2017 and as early as June 2016, browser developers such as Microsoft and Google will begin warning users when visiting web sites that use SHA-1 signed Secure Socket Layer (SSL) certificates. NOTE: The script preference allows to set one or more custom SHA-1 fingerprints of CA certificates which are trusted by this routine. The fingerprints needs to be passed comma-separated and case-insensitive: Fingerprint1 or fingerprint1, Fingerprint2|affected=|impact=|solution=Servers that use SSL/TLS certificates signed with a weak SHA-1, MD5, MD4 or MD2 hashing algorithm will need to obtain new SHA-2 signed SSL/TLS certificates to avoid web browser SSL/TLS certificate warnings.|vuldetect=Check which hashing algorithm was used to sign the remote SSL/TLS certificate.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"1111/tcp","name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","comment":"","threat":"Medium","modification_time":"2023-06-15T06:33:57Z"},{"creation_time":"2023-06-15T06:25:08Z","severity":"4.0","host_ip":"172.16.200.76","resultId":"164e6a23-dca1-4463-8ad9-8d37e9c364bc","gvm_asset_id":"","original_severity":"4","qod":{"type":"","value":"80"},"description":"The following certificates are part of the certificate chain but using insecure signature algorithms: Subject: OU=NPAI,O=NSFOCUS,L=Beijing,ST=Beijing,C=CN Signature Algorithm: sha1WithRSAEncryption","scan_nvt_version":"2021-10-15T11:13:32Z","nvt":{"refs":[{"type":"url"}],"name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","oid":"1.3.6.1.4.1.25623.1.0.105880","type":"nvt","family":"SSL and TLS","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:P/A:N|summary=The remote service is using a SSL/TLS certificate in the certificate chain that has been signed using a cryptographically weak hashing algorithm.|insight=The following hashing algorithms used for signing SSL/TLS certificates are considered cryptographically weak and not secure enough for ongoing use: - Secure Hash Algorithm 1 (SHA-1) - Message Digest 5 (MD5) - Message Digest 4 (MD4) - Message Digest 2 (MD2) Beginning as late as January 2017 and as early as June 2016, browser developers such as Microsoft and Google will begin warning users when visiting web sites that use SHA-1 signed Secure Socket Layer (SSL) certificates. NOTE: The script preference allows to set one or more custom SHA-1 fingerprints of CA certificates which are trusted by this routine. The fingerprints needs to be passed comma-separated and case-insensitive: Fingerprint1 or fingerprint1, Fingerprint2|affected=|impact=|solution=Servers that use SSL/TLS certificates signed with a weak SHA-1, MD5, MD4 or MD2 hashing algorithm will need to obtain new SHA-2 signed SSL/TLS certificates to avoid web browser SSL/TLS certificate warnings.|vuldetect=Check which hashing algorithm was used to sign the remote SSL/TLS certificate.|solution_type=Mitigation"},"original_threat":"Medium","hostname":"","port":"1111/tcp","name":"SSL/TLS: Certificate Signed Using A Weak Signature Algorithm","comment":"","threat":"Medium","modification_time":"2023-06-15T06:25:08Z"},{"creation_time":"2023-06-15T06:43:47Z","severity":"2.6","host_ip":"192.168.5.175","resultId":"21e0fe7b-c298-4a5a-9f69-874c48c8ba2a","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1313501966 Packet 2: 1313503055","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:43:47Z"},{"creation_time":"2023-06-15T04:39:03Z","severity":"2.6","host_ip":"172.16.201.11","resultId":"31b7addb-0618-47c7-a961-e5b650558364","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3576644843 Packet 2: 482766255","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:03Z"},{"creation_time":"2023-06-15T04:39:16Z","severity":"2.6","host_ip":"172.16.200.59","resultId":"97e9068f-498f-4e9c-ab49-79909108436e","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1867487777 Packet 2: 1867488946","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:16Z"},{"creation_time":"2023-06-15T04:40:15Z","severity":"2.6","host_ip":"172.16.201.6","resultId":"bfb7697a-ab4c-4acc-99e8-f73f993260dd","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 175257737 Packet 2: 3235409617","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:40:15Z"},{"creation_time":"2023-06-15T04:40:36Z","severity":"2.6","host_ip":"172.16.201.24","resultId":"c789d278-d39a-4be6-aa2b-7e431c1d7fde","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 765411071 Packet 2: 3595039181","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:40:36Z"},{"creation_time":"2023-06-15T06:18:28Z","severity":"2.6","host_ip":"172.16.200.54","resultId":"35519101-66b5-4c69-86df-f03c30cf2ecb","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1212381439 Packet 2: 1212382619","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:28Z"},{"creation_time":"2023-06-15T04:41:36Z","severity":"2.6","host_ip":"172.16.201.22","resultId":"1d18f339-f0a8-4d9d-b5d5-f3754b610f51","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 844156377 Packet 2: 2838543733","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:41:36Z"},{"creation_time":"2023-06-15T04:18:56Z","severity":"2.6","host_ip":"172.16.201.20","resultId":"e01e04e0-c22d-4601-84aa-fce458a10a40","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1765855432 Packet 2: 571443987","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:18:56Z"},{"creation_time":"2023-06-15T04:18:51Z","severity":"2.6","host_ip":"172.16.201.4","resultId":"a4019dbe-9b32-4b02-84a3-dabb3a60a028","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 788852512 Packet 2: 194064337","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:18:51Z"},{"creation_time":"2023-06-15T04:17:01Z","severity":"2.6","host_ip":"172.16.200.57","resultId":"ef8fd36f-fb96-4f66-812d-d5fc46eaa36f","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2542575948 Packet 2: 2542577075","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:17:01Z"},{"creation_time":"2023-06-15T06:18:28Z","severity":"2.6","host_ip":"172.16.200.54","resultId":"642beeb4-ec4b-41ec-aff0-9d594dacae03","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:28Z"},{"creation_time":"2023-06-15T04:16:56Z","severity":"2.6","host_ip":"172.16.200.57","resultId":"0d8cb6a0-d67c-4e34-85c3-2f08d8a812a5","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T04:16:56Z"},{"creation_time":"2023-06-15T04:36:29Z","severity":"2.6","host_ip":"172.16.201.7","resultId":"87cb1db4-985a-487e-bd28-5a01e4dd8d17","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3408181468 Packet 2: 1063831010","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:36:29Z"},{"creation_time":"2023-06-15T04:52:07Z","severity":"2.6","host_ip":"172.16.201.26","resultId":"bc89df4d-4296-47ce-b6b6-45990d089113","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2427362600 Packet 2: 2942492365","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:52:07Z"},{"creation_time":"2023-06-15T04:53:01Z","severity":"2.6","host_ip":"172.16.201.14","resultId":"7ac75403-d3a5-4725-bad0-79ece94eb72c","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1035033488 Packet 2: 4127810376","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:53:01Z"},{"creation_time":"2023-06-15T04:53:30Z","severity":"2.6","host_ip":"172.16.201.15","resultId":"2f0f3078-640f-475c-9a25-6ae97bf5d306","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 963788985 Packet 2: 112625017","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:53:30Z"},{"creation_time":"2023-06-15T04:20:12Z","severity":"2.6","host_ip":"172.16.200.59","resultId":"cf23ffb4-d8b4-4abb-ad17-e2755fdec3e1","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1866341386 Packet 2: 1866342566","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:20:12Z"},{"creation_time":"2023-06-15T06:07:15Z","severity":"2.6","host_ip":"172.16.200.54","resultId":"ab2969c7-b977-4ee2-a564-3992085a12ff","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T06:07:15Z"},{"creation_time":"2023-06-15T04:11:01Z","severity":"2.6","host_ip":"172.16.208.31","resultId":"cef97235-762b-4a04-b9e0-450c00c4667e","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 41384371 Packet 2: 41384486","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"WIN7-2023BHZNCR","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:11:01Z"},{"creation_time":"2023-06-15T06:07:15Z","severity":"2.6","host_ip":"172.16.200.54","resultId":"e43978bc-bb76-4494-b534-f138ed8e7079","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1211709596 Packet 2: 1211710673","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:07:15Z"},{"creation_time":"2023-06-15T06:16:06Z","severity":"2.6","host_ip":"172.16.200.77","resultId":"266fe513-184a-4fa2-8bd9-21d7b11c3748","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3522517868 Packet 2: 3522519075","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:16:06Z"},{"creation_time":"2023-06-15T04:12:31Z","severity":"2.6","host_ip":"172.16.208.36","resultId":"883f3d9b-314d-484a-a906-22e043da3c61","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 395546468 Packet 2: 395547616","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"WIN-S8I4AKNRGN6","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:12:31Z"},{"creation_time":"2023-06-15T04:19:26Z","severity":"2.6","host_ip":"172.16.201.23","resultId":"80a4858e-5b93-43e8-b4a7-c1d5b896c6c1","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3705987699 Packet 2: 1290257768","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:19:26Z"},{"creation_time":"2023-06-15T11:55:08Z","severity":"2.6","host_ip":"172.16.200.60","resultId":"8bb62c13-5a45-407d-8e37-7c4dcee4a4e7","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 270876075 Packet 2: 270876343","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T11:55:08Z"},{"creation_time":"2023-06-15T06:17:02Z","severity":"2.6","host_ip":"172.16.200.75","resultId":"748759c8-9565-42a5-9de6-0131aba64d12","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1666171986 Packet 2: 1666173159","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:17:02Z"},{"creation_time":"2023-06-15T04:08:03Z","severity":"2.6","host_ip":"172.16.201.201","resultId":"8d506e25-1680-4fc2-8b83-e78dd4b21464","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3651088380 Packet 2: 3651088493","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:08:03Z"},{"creation_time":"2023-06-15T06:21:25Z","severity":"2.6","host_ip":"172.16.200.76","resultId":"33a30b78-783c-4bbd-b446-487dd5ca80a2","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2469594924 Packet 2: 2469596115","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:21:25Z"},{"creation_time":"2023-06-15T06:21:41Z","severity":"2.6","host_ip":"172.16.200.74","resultId":"b2c6fd7d-31aa-4914-955a-cb0f278cad3e","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2839675777 Packet 2: 2839676938","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:21:41Z"},{"creation_time":"2023-06-15T06:15:01Z","severity":"2.6","host_ip":"172.16.200.78","resultId":"b31adbe0-0e15-448a-a3ff-56063106fcac","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3521927511 Packet 2: 3521928639","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:15:01Z"},{"creation_time":"2023-06-15T04:15:04Z","severity":"2.6","host_ip":"172.16.201.22","resultId":"10baa516-041d-4e6b-be2d-9d7c4cb67b25","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2641627441 Packet 2: 3466206562","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:15:04Z"},{"creation_time":"2023-06-15T04:14:36Z","severity":"2.6","host_ip":"172.16.200.56","resultId":"9ebd576f-8879-42fc-a9a7-82e150f5017c","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3176608318 Packet 2: 3176609457","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:14:36Z"},{"creation_time":"2023-06-15T04:19:25Z","severity":"2.6","host_ip":"172.16.201.24","resultId":"f0593dc2-6177-4ec0-9d44-1db6c90cbef0","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3472007840 Packet 2: 2740338815","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:19:25Z"},{"creation_time":"2023-06-15T04:14:36Z","severity":"2.6","host_ip":"172.16.200.56","resultId":"a90bdd73-2967-4113-84ba-b65e08d06503","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T04:14:36Z"},{"creation_time":"2023-06-15T06:18:43Z","severity":"2.6","host_ip":"172.16.200.55","resultId":"7fd5d0a7-9e78-4093-a213-692af73a2805","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:43Z"},{"creation_time":"2023-06-15T04:07:42Z","severity":"2.6","host_ip":"172.16.201.11","resultId":"b1c1dd3f-2097-43f7-b42d-0196aae3d310","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 191194926 Packet 2: 1692545616","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:07:42Z"},{"creation_time":"2023-06-15T06:18:43Z","severity":"2.6","host_ip":"172.16.200.55","resultId":"c283d4c3-cc9d-4885-a189-e16c424769e2","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1213199638 Packet 2: 1213200829","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:43Z"},{"creation_time":"2023-06-15T06:41:36Z","severity":"2.6","host_ip":"192.168.5.174","resultId":"616abf9d-b147-480a-bfc1-340e4a23570d","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1313354900 Packet 2: 1313355996","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:41:36Z"},{"creation_time":"2023-06-15T04:06:40Z","severity":"2.6","host_ip":"172.16.201.6","resultId":"b776463a-12df-4092-ad85-df588270b0ca","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1126661521 Packet 2: 3636411337","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:06:40Z"},{"creation_time":"2023-06-15T06:18:48Z","severity":"2.6","host_ip":"172.16.200.56","resultId":"5732fb9c-7a1d-4304-8525-4d38a1a14e09","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:48Z"},{"creation_time":"2023-06-15T04:05:00Z","severity":"2.6","host_ip":"172.16.201.7","resultId":"2deee4ed-f281-41da-9b3e-390d1f122662","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2116384813 Packet 2: 1463317221","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:05:00Z"},{"creation_time":"2023-06-15T06:19:09Z","severity":"2.6","host_ip":"172.16.200.57","resultId":"340f845c-0694-4d33-bf77-f3a401151d48","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T06:19:09Z"},{"creation_time":"2023-06-15T04:11:37Z","severity":"2.6","host_ip":"172.16.200.55","resultId":"7ec23654-9866-4d91-ab9b-b9e590b34f99","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T04:11:37Z"},{"creation_time":"2023-06-15T06:19:09Z","severity":"2.6","host_ip":"172.16.200.57","resultId":"701518b6-ad48-4b6f-9155-0fb9ef72fbf1","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2549907164 Packet 2: 2549908335","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:19:09Z"},{"creation_time":"2023-06-15T04:11:37Z","severity":"2.6","host_ip":"172.16.200.55","resultId":"17996223-f62d-4220-afca-85a01d09070a","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1205575385 Packet 2: 1205576534","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:11:37Z"},{"creation_time":"2023-06-15T04:06:00Z","severity":"2.6","host_ip":"172.16.201.26","resultId":"c210b669-4965-4320-a697-4798b6e5fe51","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1198149988 Packet 2: 2191451059","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:06:00Z"},{"creation_time":"2023-06-15T06:26:04Z","severity":"2.6","host_ip":"172.16.200.73","resultId":"3d9a0dd9-a88f-48d8-b532-d213091f0fff","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2839305226 Packet 2: 2839306374","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:26:04Z"},{"creation_time":"2023-06-15T06:23:12Z","severity":"2.6","host_ip":"172.16.200.73","resultId":"ce3339bb-561d-4218-903b-1fe22c37c8b5","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2839133425 Packet 2: 2839134560","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:23:12Z"},{"creation_time":"2023-06-15T11:50:52Z","severity":"2.6","host_ip":"172.16.201.13","resultId":"6027a6d5-debf-454a-891a-24a70cc0cfa1","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 2550416627 Packet 2: 2125719157","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T11:50:52Z"},{"creation_time":"2023-06-15T11:53:59Z","severity":"2.6","host_ip":"172.16.201.12","resultId":"ac82ddaf-fe99-4d28-9019-b772a09bbf7c","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 77178491 Packet 2: 908251943","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T11:53:59Z"},{"creation_time":"2023-06-15T06:14:31Z","severity":"2.6","host_ip":"172.16.200.59","resultId":"700e2d2c-5dc0-4455-9701-10917ca2ecb2","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1873202081 Packet 2: 1873203206","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:14:31Z"},{"creation_time":"2023-06-15T04:08:13Z","severity":"2.6","host_ip":"172.16.201.9","resultId":"ba13643f-f5f5-4f98-b0af-cce68152b601","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3352540321 Packet 2: 2133843723","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:08:13Z"},{"creation_time":"2023-06-15T04:22:50Z","severity":"2.6","host_ip":"172.16.200.54","resultId":"784c73fe-6ab7-436d-8c1d-86e2705d4b4f","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"95"},"description":"The remote SSH server supports the following weak client-to-server MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96 The remote SSH server supports the following weak server-to-client MAC algorithm(s): hmac-md5 hmac-md5-96 hmac-sha1-96","scan_nvt_version":"2021-09-20T11:05:40Z","nvt":{"name":"Weak MAC Algorithm(s) Supported (SSH)","oid":"1.3.6.1.4.1.25623.1.0.105610","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote SSH server is configured to allow / support weak MAC algorithm(s).|insight=|affected=|impact=|solution=Disable the reported weak MAC algorithm(s).|vuldetect=Checks the supported MAC algorithms (client-to-server and server-to-client) of the remote SSH server. Currently weak MAC algorithms are defined as the following: - MD5 based algorithms - 96-bit based algorithms - none algorithm|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"22/tcp","name":"Weak MAC Algorithm(s) Supported (SSH)","comment":"","threat":"Low","modification_time":"2023-06-15T04:22:50Z"},{"creation_time":"2023-06-15T04:22:50Z","severity":"2.6","host_ip":"172.16.200.54","resultId":"de93de09-dc6c-476f-9101-11276a733ba8","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1205412870 Packet 2: 1205414038","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:22:50Z"},{"creation_time":"2023-06-15T04:39:55Z","severity":"2.6","host_ip":"172.16.201.9","resultId":"5dc173e8-5809-4152-a08f-587bb8e2b76f","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1062838777 Packet 2: 3772225434","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:55Z"},{"creation_time":"2023-06-15T06:18:53Z","severity":"2.6","host_ip":"172.16.200.56","resultId":"80076a26-8715-4f01-bc0c-f5f18fca1612","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3184063603 Packet 2: 3184064798","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:53Z"},{"creation_time":"2023-06-15T04:38:10Z","severity":"2.6","host_ip":"172.16.201.23","resultId":"546db230-7216-4118-b698-8dd5d1a074eb","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 100051039 Packet 2: 1392024748","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:38:10Z"},{"creation_time":"2023-06-15T04:38:46Z","severity":"2.6","host_ip":"172.16.201.20","resultId":"eb2eaaed-cff9-4973-889a-c74aeea8fe4b","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 1872507908 Packet 2: 3430718144","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:38:46Z"},{"creation_time":"2023-06-15T04:39:57Z","severity":"2.6","host_ip":"172.16.201.4","resultId":"47370bbd-83a0-4b5b-9178-a8b7a31980ca","gvm_asset_id":"","original_severity":"2.6","qod":{"type":"","value":"80"},"description":"It was detected that the host implements RFC1323/RFC7323. The following timestamps were retrieved with a delay of 1 seconds in-between: Packet 1: 3958865658 Packet 2: 3204838706","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"url"},{"type":"url"},{"type":"url"}],"name":"TCP Timestamps Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.80091","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:N/AC:H/Au:N/C:P/I:N/A:N|summary=The remote host implements TCP timestamps and therefore allows to compute the uptime.|insight=The remote host implements TCP timestamps, as defined by RFC1323/RFC7323.|affected=TCP implementations that implement RFC1323/RFC7323.|impact=A side effect of this feature is that the uptime of the remote host can sometimes be computed.|solution=To disable TCP timestamps on linux add the line 'net.ipv4.tcp_timestamps = 0' to /etc/sysctl.conf. Execute 'sysctl -p' to apply the settings at runtime. To disable TCP timestamps on Windows execute 'netsh int tcp set global timestamps=disabled' Starting with Windows Server 2008 and Vista, the timestamp can not be completely disabled. The default behavior of the TCP/IP stack on this Systems is to not use the Timestamp options when initiating TCP connections, but use them if the TCP peer that is initiating communication includes them in their synchronize (SYN) segment. See the references for more information.|vuldetect=Special IP packets are forged and sent with a little delay in between to the target IP. The responses are searched for a timestamps. If found, the timestamps are reported.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/tcp","name":"TCP Timestamps Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:57Z"},{"creation_time":"2023-06-15T06:18:23Z","severity":"2.1","host_ip":"172.16.200.54","resultId":"7da229d8-73b2-47e0-88bb-b549bbaa646b","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:23Z"},{"creation_time":"2023-06-15T04:14:11Z","severity":"2.1","host_ip":"172.16.200.56","resultId":"f1318595-4b65-436e-a7f2-99dcd66413fa","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:14:11Z"},{"creation_time":"2023-06-15T06:14:56Z","severity":"2.1","host_ip":"172.16.200.78","resultId":"4e0fe123-0976-4194-9e60-3eaa64b740aa","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:14:56Z"},{"creation_time":"2023-06-15T06:14:20Z","severity":"2.1","host_ip":"172.16.200.59","resultId":"20729b0d-8bcc-4ada-b76a-cb207884df11","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:14:20Z"},{"creation_time":"2023-06-15T06:14:20Z","severity":"2.1","host_ip":"172.16.200.59","resultId":"b23b28f7-aa38-4be0-84fd-9a024f7d8e20","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:14:20Z"},{"creation_time":"2023-06-15T06:43:37Z","severity":"2.1","host_ip":"192.168.5.175","resultId":"e7835ec4-fb1f-4e8d-b7f6-5bd134e90271","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:43:37Z"},{"creation_time":"2023-06-15T04:22:12Z","severity":"2.1","host_ip":"172.16.200.54","resultId":"1718a044-047a-46f6-88d3-0a5022aa4e16","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:22:12Z"},{"creation_time":"2023-06-15T06:18:43Z","severity":"2.1","host_ip":"172.16.200.56","resultId":"d84eeb0f-86a0-42bf-ad67-48f35c40907f","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:43Z"},{"creation_time":"2023-06-15T06:18:43Z","severity":"2.1","host_ip":"172.16.200.56","resultId":"c7cb8119-e368-4765-9e7b-2e3d1dbd496d","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:43Z"},{"creation_time":"2023-06-15T04:40:16Z","severity":"2.1","host_ip":"172.16.201.24","resultId":"a7f30601-8cda-4c44-a220-d9d5e7a07242","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:40:16Z"},{"creation_time":"2023-06-15T04:07:21Z","severity":"2.1","host_ip":"172.16.201.11","resultId":"a7849e4a-98af-4a35-a290-5e6bdbe3bfa8","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:07:21Z"},{"creation_time":"2023-06-15T11:54:47Z","severity":"2.1","host_ip":"172.16.200.60","resultId":"19160381-5ca0-4c01-b7a5-44e78bb90e46","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T11:54:47Z"},{"creation_time":"2023-06-15T04:39:06Z","severity":"2.1","host_ip":"172.16.200.59","resultId":"e44c361c-ca3c-48a7-960d-c503f2521c83","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:06Z"},{"creation_time":"2023-06-15T04:36:09Z","severity":"2.1","host_ip":"172.16.201.7","resultId":"07e2e279-0110-42d3-8e81-8a9357d4b9d1","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:36:09Z"},{"creation_time":"2023-06-15T04:39:06Z","severity":"2.1","host_ip":"172.16.200.59","resultId":"b38fa5e0-8e22-4674-ace1-03379a816391","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:06Z"},{"creation_time":"2023-06-15T04:18:21Z","severity":"2.1","host_ip":"172.16.201.4","resultId":"af52234e-a92b-4683-b0ab-93025275a6af","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:18:21Z"},{"creation_time":"2023-06-15T04:06:19Z","severity":"2.1","host_ip":"172.16.201.6","resultId":"ddf81298-97a4-4b31-b958-d937f05411f9","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:06:19Z"},{"creation_time":"2023-06-15T06:27:39Z","severity":"2.1","host_ip":"172.16.200.79","resultId":"641ca70e-bf33-4dcc-9d9c-ab0f2a9a25fc","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:27:39Z"},{"creation_time":"2023-06-15T06:29:10Z","severity":"2.1","host_ip":"172.16.200.73","resultId":"e2c26f09-608b-49f3-b400-4cf27d8b1ff7","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:29:10Z"},{"creation_time":"2023-06-15T06:19:04Z","severity":"2.1","host_ip":"172.16.200.57","resultId":"812ba682-da13-4d75-bd26-1759c41d8c41","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:19:04Z"},{"creation_time":"2023-06-15T04:11:27Z","severity":"2.1","host_ip":"172.16.200.55","resultId":"466b4e6a-1afa-4974-bbe7-5db21d623193","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:11:27Z"},{"creation_time":"2023-06-15T04:51:47Z","severity":"2.1","host_ip":"172.16.201.26","resultId":"5b36ff1e-bf15-40c9-8ca4-d655e3786160","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:51:47Z"},{"creation_time":"2023-06-15T06:19:04Z","severity":"2.1","host_ip":"172.16.200.57","resultId":"b1afefe1-0bb9-409c-b7ab-0643eb249f2b","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:19:04Z"},{"creation_time":"2023-06-15T04:16:46Z","severity":"2.1","host_ip":"172.16.200.57","resultId":"1c3acd28-0c7d-4333-ba03-4823b51af366","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:16:46Z"},{"creation_time":"2023-06-15T04:52:41Z","severity":"2.1","host_ip":"172.16.201.14","resultId":"d352efdb-d397-4435-884d-207846d21145","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:52:41Z"},{"creation_time":"2023-06-15T04:39:37Z","severity":"2.1","host_ip":"172.16.201.4","resultId":"dc2c0996-c872-4b07-8f78-d7e0065fee2e","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:37Z"},{"creation_time":"2023-06-15T04:53:10Z","severity":"2.1","host_ip":"172.16.201.15","resultId":"124a981f-ce0d-4ea3-9113-5bd7a2cc2850","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:53:10Z"},{"creation_time":"2023-06-15T04:16:46Z","severity":"2.1","host_ip":"172.16.200.57","resultId":"b7d3250b-d7aa-4a06-8aff-e01ee2d40b30","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:16:46Z"},{"creation_time":"2023-06-15T11:50:32Z","severity":"2.1","host_ip":"172.16.201.13","resultId":"26f7e5ed-1650-4d31-930c-270039c2e601","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T11:50:32Z"},{"creation_time":"2023-06-15T06:41:31Z","severity":"2.1","host_ip":"192.168.5.174","resultId":"2f650aa6-3516-46c2-819d-9b6d98da3709","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:41:31Z"},{"creation_time":"2023-06-15T06:18:38Z","severity":"2.1","host_ip":"172.16.200.55","resultId":"86da0d1e-f213-46a2-bce9-48b9143be1ac","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:38Z"},{"creation_time":"2023-06-15T06:18:38Z","severity":"2.1","host_ip":"172.16.200.55","resultId":"28424279-3c59-4763-bf5a-540835fd7ef2","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:38Z"},{"creation_time":"2023-06-15T06:21:00Z","severity":"2.1","host_ip":"172.16.200.76","resultId":"03f01a11-5562-4a7f-a73e-d799dd5893b0","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:21:00Z"},{"creation_time":"2023-06-15T04:19:39Z","severity":"2.1","host_ip":"172.16.200.59","resultId":"fc0cdaad-3d2d-41b9-83fc-0d8effec3a3e","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:19:39Z"},{"creation_time":"2023-06-15T04:19:39Z","severity":"2.1","host_ip":"172.16.200.59","resultId":"8c0a2d3e-5d35-47cb-9605-8b6f51944245","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:19:39Z"},{"creation_time":"2023-06-15T04:39:55Z","severity":"2.1","host_ip":"172.16.201.6","resultId":"aaf7caac-ee69-45fb-9d8f-25e30f456ea2","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:55Z"},{"creation_time":"2023-06-15T04:04:40Z","severity":"2.1","host_ip":"172.16.201.7","resultId":"f85e932a-ca79-4a8d-937e-c5d2e4567cf2","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:04:40Z"},{"creation_time":"2023-06-15T04:38:21Z","severity":"2.1","host_ip":"172.16.201.20","resultId":"a5c92af8-9e03-4b3e-aeaf-c6ca2b277dfe","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:38:21Z"},{"creation_time":"2023-06-15T06:16:01Z","severity":"2.1","host_ip":"172.16.200.77","resultId":"2beecc66-2042-4b5b-8c8d-c198b2b5482f","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:16:01Z"},{"creation_time":"2023-06-15T04:37:50Z","severity":"2.1","host_ip":"172.16.201.23","resultId":"07ad0d39-a452-48ca-b5d9-00d65113d117","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:37:50Z"},{"creation_time":"2023-06-15T04:14:38Z","severity":"2.1","host_ip":"172.16.201.22","resultId":"5397803d-7d9f-4a64-8007-a1446a6bd6fc","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:14:38Z"},{"creation_time":"2023-06-15T04:19:00Z","severity":"2.1","host_ip":"172.16.201.23","resultId":"b333ed47-445f-4b28-87dc-52c0b29d4963","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:19:00Z"},{"creation_time":"2023-06-15T04:18:54Z","severity":"2.1","host_ip":"172.16.201.24","resultId":"a002a037-5354-40d6-806f-614de2e79888","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:18:54Z"},{"creation_time":"2023-06-15T04:22:12Z","severity":"2.1","host_ip":"172.16.200.54","resultId":"4e59ed14-db07-4473-a964-4c911f774cd3","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:22:12Z"},{"creation_time":"2023-06-15T04:11:27Z","severity":"2.1","host_ip":"172.16.200.55","resultId":"ba744010-08e8-410a-883d-3cb7e55ca57e","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:11:27Z"},{"creation_time":"2023-06-15T04:07:53Z","severity":"2.1","host_ip":"172.16.201.9","resultId":"5bbebfe3-1985-4db2-bca2-92526dd372fd","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:07:53Z"},{"creation_time":"2023-06-15T06:23:02Z","severity":"2.1","host_ip":"172.16.200.74","resultId":"5f580d09-d44a-459c-8902-15ca798b584c","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:23:02Z"},{"creation_time":"2023-06-15T06:07:15Z","severity":"2.1","host_ip":"172.16.200.54","resultId":"9b9bda13-54e3-4f12-a238-239afee31639","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:07:15Z"},{"creation_time":"2023-06-15T06:07:15Z","severity":"2.1","host_ip":"172.16.200.54","resultId":"0029c552-30d2-4b1b-86e8-a7f37b28e862","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:07:15Z"},{"creation_time":"2023-06-15T04:14:11Z","severity":"2.1","host_ip":"172.16.200.56","resultId":"ab8e55fb-d267-4edc-a244-540ffb98de8f","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:14:11Z"},{"creation_time":"2023-06-15T06:24:37Z","severity":"2.1","host_ip":"172.16.200.73","resultId":"e0810a74-a8e9-4069-9c2d-12fc490315c2","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:24:37Z"},{"creation_time":"2023-06-15T04:39:30Z","severity":"2.1","host_ip":"172.16.201.9","resultId":"ca2719eb-1cbf-4d14-8e89-8067d59dd1ed","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:39:30Z"},{"creation_time":"2023-06-15T11:53:39Z","severity":"2.1","host_ip":"172.16.201.12","resultId":"9f8074b0-d2a4-4de6-afe8-c06577660507","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T11:53:39Z"},{"creation_time":"2023-06-15T06:13:05Z","severity":"2.1","host_ip":"172.16.201.254","resultId":"301ab9f2-2c0d-4661-9a8e-9c345ec8698f","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:13:05Z"},{"creation_time":"2023-06-15T06:13:05Z","severity":"2.1","host_ip":"172.16.201.254","resultId":"7e7d48c8-d1e8-4fa3-990a-5e89c6e26f93","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:13:05Z"},{"creation_time":"2023-06-15T06:16:42Z","severity":"2.1","host_ip":"172.16.200.75","resultId":"49238afe-9d2e-4d9b-8081-168f0efcf58e","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:16:42Z"},{"creation_time":"2023-06-15T04:05:38Z","severity":"2.1","host_ip":"172.16.201.26","resultId":"325146f1-3582-41ef-8d39-3156489bc6ad","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:05:38Z"},{"creation_time":"2023-06-15T04:18:31Z","severity":"2.1","host_ip":"172.16.201.20","resultId":"94913e7d-62b4-4503-8666-e8b2447d8565","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:18:31Z"},{"creation_time":"2023-06-15T04:41:15Z","severity":"2.1","host_ip":"172.16.201.22","resultId":"6a59be88-3b26-4c8f-91c4-0de999e413f4","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:41:15Z"},{"creation_time":"2023-06-15T04:09:37Z","severity":"2.1","host_ip":"172.16.201.254","resultId":"bae93618-39d0-40c8-9b1a-00c93331605b","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"Received Netmask: 255.255.255.0","scan_nvt_version":"2022-11-17T10:12:09Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Netmask Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.146440","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP netmask request.|insight=The Netmask Reply is an ICMP message which replies to a Netmask message.|affected=|impact=This information might give an attacker information for further reconnaissance and/or attacks (e.g. subnet structure, filter bypass, etc.).|solution=Various mitigations are possible: - Disable the support for ICMP netmask on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Netmask Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:09:37Z"},{"creation_time":"2023-06-15T04:09:37Z","severity":"2.1","host_ip":"172.16.201.254","resultId":"cbee5390-826e-4fa3-b394-0ceea743ced5","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:09:37Z"},{"creation_time":"2023-06-15T04:38:43Z","severity":"2.1","host_ip":"172.16.201.11","resultId":"5f34dae9-5cd1-4f6f-bd1d-e61716f5d74f","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T04:38:43Z"},{"creation_time":"2023-06-15T06:18:23Z","severity":"2.1","host_ip":"172.16.200.54","resultId":"ac4e4945-dca6-4483-9597-75090670642b","gvm_asset_id":"","original_severity":"2.1","qod":{"type":"","value":"80"},"description":"The following response / ICMP packet has been received: - ICMP Type: 14 - ICMP Code: 0","scan_nvt_version":"2023-05-11T09:09:33Z","nvt":{"refs":[{"type":"cve"},{"type":"url"},{"type":"url"},{"type":"cert-bund"},{"type":"cert-bund"},{"type":"dfn-cert"}],"name":"ICMP Timestamp Reply Information Disclosure","oid":"1.3.6.1.4.1.25623.1.0.103190","type":"nvt","family":"General","severities":[{"origin":"","type":"cvss_base_v2"}],"tags":"cvss_base_vector=AV:L/AC:L/Au:N/C:P/I:N/A:N|summary=The remote host responded to an ICMP timestamp request.|insight=The Timestamp Reply is an ICMP message which replies to a Timestamp message. It consists of the originating timestamp sent by the sender of the Timestamp as well as a receive timestamp and a transmit timestamp.|affected=|impact=This information could theoretically be used to exploit weak time-based random number generators in other services.|solution=Various mitigations are possible: - Disable the support for ICMP timestamp on the remote host completely - Protect the remote host by a firewall, and block ICMP packets passing through the firewall in either direction (either completely or only for untrusted networks)|vuldetect=Sends an ICMP Timestamp (Type 13) request and checks if a Timestamp Reply (Type 14) is received.|solution_type=Mitigation"},"original_threat":"Low","hostname":"","port":"general/icmp","name":"ICMP Timestamp Reply Information Disclosure","comment":"","threat":"Low","modification_time":"2023-06-15T06:18:23Z"}]}