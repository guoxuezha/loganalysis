<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gem.loganalysis.mapper.AssetMapper">

    <select id="getAssetList" resultType="com.gem.loganalysis.model.vo.asset.AssetRespVO">
        SELECT
        asset.ASSET_ID AS assetId,
        asset.ASSET_NAME AS assetName,
        asset.ASSET_CLASS AS assetClass,
        asset.ASSET_TYPE AS assetType,
        asset.ASSET_DESC AS assetDesc,
        asset.ASSET_BRAND AS assetBrand,
        asset.ASSET_MODEL AS assetModel,
        asset.ASSET_SPEC AS assetSpec,
        asset.OS_VERSION AS osVersion,
        asset.FIRMWARE_VERSION AS firmwareVersion,
        asset.SOFTWARE_VERSION AS softwareVersion,
        asset.IP_ADDRESS AS ipAddress,
        asset.SERVICE_PORT AS servicePort,
        asset.NM_PORT AS nmPort,
        asset.NM_PROCOTOL AS nmProcotol,
        asset.NM_ACCOUNT AS nmAccount,
        asset.ASSET_ORG AS assetOrg,
        asset.ASSET_MANAGER AS assetManager,
        asset.ASSET_GROUP_ID AS assetGroupId,
        asset.ASSET_TAG AS assetTag,
        asset.ASSET_STATUS AS assetStatus,
        asset.CREATE_TIME AS createTime,
        asset.CREATE_BY AS createBy,
        asset.UPDATE_TIME AS updateTime,
        asset.UPDATE_BY AS updateBy,
        asset.MIB_VERSION AS mibVersion,
        group.GROUP_NAME AS assetGroupName,
        user.ACCOUNT AS assetManagerName,
        user.MOBILE AS assetManagerMobile
        FROM sop_asset AS asset
        LEFT JOIN sop_asset_group AS `group`
        ON asset.ASSET_GROUP_ID = group.GROUP_ID
        LEFT JOIN m4_sso_user AS `user`
        ON asset.ASSET_MANAGER = user.USER_ID
        WHERE asset.DELETE_STATE = 0
        <if test="assetName != null and assetName.trim() != ''">
            AND asset.ASSET_NAME LIKE CONCAT('%', #{assetName}, '%')
        </if>
        <if test="assetClass!=null and assetClass.trim()!='' ">
            AND asset.ASSET_CLASS = #{assetClass}
        </if>
        <if test="assetManagerId!=null and assetManagerId.trim()!='' ">
            AND asset.ASSET_MANAGER = #{assetManagerId}
        </if>
        <if test="assetType!=null and assetType.trim()!='' ">
            AND asset.ASSET_TYPE = #{assetType}
        </if>
        <if test="ipAddress!=null and ipAddress.trim()!='' ">
            AND asset.IP_ADDRESS LIKE CONCAT('%', #{ipAddress}, '%')
        </if>
        <if test="assetManager!=null and assetManager.trim()!='' ">
            AND user.USER_NAME LIKE CONCAT('%', #{assetManager}, '%')
        </if>
        <if test="assetGroupId!=null and assetGroupId.trim()!='' ">
            AND asset.ASSET_GROUP_ID = #{assetGroupId}
        </if>
        <if test="assetStatus!=null and assetStatus.trim()!='' ">
            AND asset.ASSET_STATUS = #{assetStatus}
        </if>
        <if test="assetOrg!=null and assetOrg.trim()!='' ">
            AND asset.ASSET_ORG = #{assetOrg}
        </if>
        <if test="assetTag!=null and assetTag.trim()!='' ">
            AND asset.ASSET_TAG LIKE CONCAT('%', #{assetTag}, '%')
        </if>
    </select>

    <select id="getLogAsset" resultType="com.gem.loganalysis.model.vo.asset.AssetRespVO">
        SELECT
        asset.ASSET_ID AS assetId,
        asset.ASSET_NAME AS assetName,
        asset.ASSET_CLASS AS assetClass,
        asset.ASSET_TYPE AS assetType,
        asset.ASSET_DESC AS assetDesc,
        asset.ASSET_BRAND AS assetBrand,
        asset.ASSET_MODEL AS assetModel,
        asset.ASSET_SPEC AS assetSpec,
        asset.OS_VERSION AS osVersion,
        asset.FIRMWARE_VERSION AS firmwareVersion,
        asset.SOFTWARE_VERSION AS softwareVersion,
        asset.IP_ADDRESS AS ipAddress,
        asset.SERVICE_PORT AS servicePort,
        asset.NM_PORT AS nmPort,
        asset.NM_PROCOTOL AS nmProcotol,
        asset.NM_ACCOUNT AS nmAccount,
        asset.ASSET_ORG AS assetOrg,
        asset.ASSET_MANAGER AS assetManager,
        asset.ASSET_GROUP_ID AS assetGroupId,
        asset.ASSET_TAG AS assetTag,
        asset.ASSET_STATUS AS assetStatus,
        asset.CREATE_TIME AS createTime,
        asset.CREATE_BY AS createBy,
        asset.UPDATE_TIME AS updateTime,
        asset.UPDATE_BY AS updateBy,
        asset.MIB_VERSION AS mibVersion,
        user.ACCOUNT AS assetManagerName,
        user.MOBILE AS assetManagerMobile
        FROM SOP_ASSET AS asset
        LEFT JOIN SOP_ASSET_LOG_PREVIEW AS log
        ON asset.`IP_ADDRESS` = log.HOST
        LEFT JOIN M4_SSO_USER AS `user`
        ON asset.ASSET_MANAGER = user.USER_ID
        WHERE asset.DELETE_STATE = 0
        AND log.HOST IS NOT NULL
        <if test="assetName != null and assetName.trim() != ''">
            AND asset.ASSET_NAME LIKE CONCAT('%', #{assetName}, '%')
        </if>
        <if test="assetClass!=null and assetClass.trim()!='' ">
            AND asset.ASSET_CLASS = #{assetClass}
        </if>
        <if test="assetType!=null and assetType.trim()!='' ">
            AND asset.ASSET_TYPE = #{assetType}
        </if>
        <if test="ipAddress!=null and ipAddress.trim()!='' ">
            AND asset.IP_ADDRESS LIKE CONCAT('%', #{ipAddress}, '%')
        </if>
        <if test="assetManager!=null and assetManager.trim()!='' ">
            AND user.USER_NAME LIKE CONCAT('%', #{assetManager}, '%')
        </if>
        <if test="assetGroupId!=null and assetGroupId.trim()!='' ">
            AND asset.ASSET_GROUP_ID = #{assetGroupId}
        </if>
        <if test="assetStatus!=null and assetStatus.trim()!='' ">
            AND asset.ASSET_STATUS = #{assetStatus}
        </if>
        <if test="assetOrg!=null and assetOrg.trim()!='' ">
            AND asset.ASSET_ORG = #{assetOrg}
        </if>
        GROUP BY asset.ASSET_ID
    </select>
    <select id="getAssetById" resultType="com.gem.loganalysis.model.vo.asset.AssetRespVO">
        SELECT asset.ASSET_ID         AS assetId,
               asset.ASSET_NAME       AS assetName,
               asset.ASSET_CLASS      AS assetClass,
               asset.ASSET_TYPE       AS assetType,
               asset.ASSET_DESC       AS assetDesc,
               asset.ASSET_BRAND      AS assetBrand,
               asset.ASSET_MODEL      AS assetModel,
               asset.ASSET_SPEC       AS assetSpec,
               asset.OS_VERSION       AS osVersion,
               asset.FIRMWARE_VERSION AS firmwareVersion,
               asset.SOFTWARE_VERSION AS softwareVersion,
               asset.IP_ADDRESS       AS ipAddress,
               asset.SERVICE_PORT     AS servicePort,
               asset.NM_PORT          AS nmPort,
               asset.NM_PROCOTOL      AS nmProcotol,
               asset.NM_ACCOUNT       AS nmAccount,
               asset.ASSET_ORG        AS assetOrg,
               asset.ASSET_MANAGER    AS assetManager,
               asset.ASSET_GROUP_ID   AS assetGroupId,
               asset.ASSET_TAG        AS assetTag,
               asset.ASSET_STATUS     AS assetStatus,
               asset.CREATE_TIME      AS createTime,
               asset.CREATE_BY        AS createBy,
               asset.UPDATE_TIME      AS updateTime,
               asset.UPDATE_BY        AS updateBy,
               asset.MIB_VERSION      AS mibVersion,
               group.GROUP_NAME       AS assetGroupName,
               user.ACCOUNT           AS assetManagerName,
               user.MOBILE            AS assetManagerMobile
        FROM sop_asset AS asset
                 LEFT JOIN
             sop_asset_group AS `group`
             ON
                 asset.ASSET_GROUP_ID = group.GROUP_ID
                 LEFT JOIN
             m4_sso_user AS `user`
             ON
                 asset.ASSET_MANAGER = user.USER_ID
        WHERE asset.ASSET_ID = #{id}
    </select>
    <select id="getAssetHomeOverview" resultType="com.gem.loganalysis.model.vo.HomeOverviewVO">
        SELECT
            COUNT(*) AS assetTotalCount,
            SUM(CASE WHEN ASSET_CLASS = 0 THEN 1 ELSE 0 END) AS logicalAssetCount,
            SUM(CASE WHEN sop_asset_type.ASSET_TYPE = '安全设备' THEN 1 ELSE 0 END) AS securityDeviceTotalCount,
            SUM(CASE WHEN sop_asset_type.ASSET_TYPE = '安全设备' AND sop_asset.ASSET_STATUS = 0 THEN 1 ELSE 0 END) AS securityDeviceAliveCount,
            SUM(CASE WHEN sop_asset_type.ASSET_TYPE = '服务器' OR sop_asset_type.ASSET_TYPE = '存储设备' THEN 1 ELSE 0 END) AS itDeviceTotalCount,
            SUM(CASE WHEN (sop_asset_type.ASSET_TYPE = '服务器' OR sop_asset_type.ASSET_TYPE = '存储设备') AND sop_asset.ASSET_STATUS = 0 THEN 1 ELSE 0 END) AS itDeviceAliveCount,
            SUM(CASE WHEN sop_asset_type.ASSET_TYPE = '网络设备' THEN 1 ELSE 0 END) AS networkDeviceTotalCount,
            SUM(CASE WHEN sop_asset_type.ASSET_TYPE = '网络设备' AND sop_asset.ASSET_STATUS = 0  THEN 1 ELSE 0 END) AS networkDeviceAliveCount,
            SUM(CASE WHEN sop_asset_type.ASSET_TYPE = '终端设备' THEN 1 ELSE 0 END) AS endpointDeviceTotalCount,
            SUM(CASE WHEN sop_asset_type.ASSET_TYPE = '终端设备' AND sop_asset.ASSET_STATUS = 0  THEN 1 ELSE 0 END) AS endpointDeviceOnlineCount
        FROM sop_asset
                 LEFT JOIN sop_asset_type ON sop_asset.ASSET_TYPE = sop_asset_type.TYPE_ID
        WHERE
            sop_asset.DELETE_STATE = 0;
    </select>
    <select id="getEventHomeOverview" resultType="com.gem.loganalysis.model.vo.AssetEventHomeOverviewVO">
        SELECT
            t.ASSET_TYPE AS assetType,
            IFNULL(COUNT(e.EVENT_ID), 0) AS totalEventCount,
            IFNULL(COUNT(CASE WHEN e.HANDLE_STATUS IN (0, 1) THEN e.EVENT_ID END), 0) AS pendingEventCount
        FROM
            sop_asset a
                RIGHT JOIN sop_asset_type t ON t.TYPE_ID = a.ASSET_TYPE
                LEFT JOIN sop_asset_event e ON a.ASSET_ID = e.ASSET_ID AND SUBSTRING(e.BEGIN_TIME, 1, 8) = DATE_FORMAT(NOW(), '%Y%m%d')
        WHERE
            t.ASSET_TYPE IN ('安全设备', '网络设备', '服务器','存储设备')
        GROUP BY t.ASSET_TYPE;
    </select>
</mapper>
